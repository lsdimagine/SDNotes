<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSCognitoIdentityProviderAdminInitiateAuthRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authorization request, as an administrator.&lt;/p&gt;
Required parameters: [UserPoolId, ClientId, AuthFlow]</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
            
			
			<NodeRef refid="209"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/setAnalyticsMetadata:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The analytics metadata for collecting Amazon Pinpoint metrics for &lt;code&gt;AdminInitiateAuth&lt;/code&gt; calls.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCognitoIdentityProviderAnalyticsMetadataType *analyticsMetadata</Declaration>
			
			
			<Anchor>//api/name/analyticsMetadata</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/analyticsMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The analytics metadata for collecting Amazon Pinpoint metrics for &lt;code&gt;AdminInitiateAuth&lt;/code&gt; calls.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCognitoIdentityProviderAnalyticsMetadataType *analyticsMetadata</Declaration>
			
			
			<Anchor>//api/name/analyticsMetadata</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderAdminInitiateAuthRequest/analyticsMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The analytics metadata for collecting Amazon Pinpoint metrics for &lt;code&gt;AdminInitiateAuth&lt;/code&gt; calls.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCognitoIdentityProviderAnalyticsMetadataType *analyticsMetadata</Declaration>
			
			
			<Anchor>//api/name/analyticsMetadata</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/setAuthFlow:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The authentication flow for this call to execute. The API action will depend on this value. For example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;REFRESHTOKENAUTH&lt;/code&gt; will take in a valid refresh token and return new tokens.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;USERSRPAUTH&lt;/code&gt; will take in &lt;code&gt;USERNAME&lt;/code&gt; and &lt;code&gt;SRPA&lt;/code&gt; and return the SRP variables to be used for next challenge execution.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Valid values include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;USERSRPAUTH&lt;/code&gt;: Authentication flow for the Secure Remote Password (SRP) protocol.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;REFRESHTOKENAUTH&lt;/code&gt;/&lt;code&gt;REFRESHTOKEN&lt;/code&gt;: Authentication flow for refreshing the access token and ID token by supplying a valid refresh token.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;CUSTOMAUTH&lt;/code&gt;: Custom authentication flow.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADMINNOSRPAUTH&lt;/code&gt;: Non-SRP authentication flow; you can pass in the USERNAME and PASSWORD directly if the flow is enabled for calling the app client.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCognitoIdentityProviderAuthFlowType authFlow</Declaration>
			
			
			<Anchor>//api/name/authFlow</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/authFlow</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The authentication flow for this call to execute. The API action will depend on this value. For example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;REFRESHTOKENAUTH&lt;/code&gt; will take in a valid refresh token and return new tokens.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;USERSRPAUTH&lt;/code&gt; will take in &lt;code&gt;USERNAME&lt;/code&gt; and &lt;code&gt;SRPA&lt;/code&gt; and return the SRP variables to be used for next challenge execution.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Valid values include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;USERSRPAUTH&lt;/code&gt;: Authentication flow for the Secure Remote Password (SRP) protocol.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;REFRESHTOKENAUTH&lt;/code&gt;/&lt;code&gt;REFRESHTOKEN&lt;/code&gt;: Authentication flow for refreshing the access token and ID token by supplying a valid refresh token.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;CUSTOMAUTH&lt;/code&gt;: Custom authentication flow.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADMINNOSRPAUTH&lt;/code&gt;: Non-SRP authentication flow; you can pass in the USERNAME and PASSWORD directly if the flow is enabled for calling the app client.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCognitoIdentityProviderAuthFlowType authFlow</Declaration>
			
			
			<Anchor>//api/name/authFlow</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderAdminInitiateAuthRequest/authFlow</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The authentication flow for this call to execute. The API action will depend on this value. For example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;REFRESHTOKENAUTH&lt;/code&gt; will take in a valid refresh token and return new tokens.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;USERSRPAUTH&lt;/code&gt; will take in &lt;code&gt;USERNAME&lt;/code&gt; and &lt;code&gt;SRPA&lt;/code&gt; and return the SRP variables to be used for next challenge execution.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Valid values include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;USERSRPAUTH&lt;/code&gt;: Authentication flow for the Secure Remote Password (SRP) protocol.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;REFRESHTOKENAUTH&lt;/code&gt;/&lt;code&gt;REFRESHTOKEN&lt;/code&gt;: Authentication flow for refreshing the access token and ID token by supplying a valid refresh token.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;CUSTOMAUTH&lt;/code&gt;: Custom authentication flow.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADMINNOSRPAUTH&lt;/code&gt;: Non-SRP authentication flow; you can pass in the USERNAME and PASSWORD directly if the flow is enabled for calling the app client.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSCognitoIdentityProviderAuthFlowType authFlow</Declaration>
			
			
			<Anchor>//api/name/authFlow</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/setAuthParameters:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The authentication parameters. These are inputs corresponding to the &lt;code&gt;AuthFlow&lt;/code&gt; that you are invoking. The required values depend on the value of &lt;code&gt;AuthFlow&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;USERSRPAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SRPA&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (required if the app client is configured with a client secret), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;REFRESHTOKENAUTH/REFRESHTOKEN&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (required if the app client is configured with a client secret), &lt;code&gt;REFRESHTOKEN&lt;/code&gt; (required), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;ADMINNOSRPAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (if app client is configured with client secret), &lt;code&gt;PASSWORD&lt;/code&gt; (required), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;CUSTOMAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (if app client is configured with client secret), &lt;code&gt;DEVICE_KEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *authParameters</Declaration>
			
			
			<Anchor>//api/name/authParameters</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/authParameters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The authentication parameters. These are inputs corresponding to the &lt;code&gt;AuthFlow&lt;/code&gt; that you are invoking. The required values depend on the value of &lt;code&gt;AuthFlow&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;USERSRPAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SRPA&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (required if the app client is configured with a client secret), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;REFRESHTOKENAUTH/REFRESHTOKEN&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (required if the app client is configured with a client secret), &lt;code&gt;REFRESHTOKEN&lt;/code&gt; (required), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;ADMINNOSRPAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (if app client is configured with client secret), &lt;code&gt;PASSWORD&lt;/code&gt; (required), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;CUSTOMAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (if app client is configured with client secret), &lt;code&gt;DEVICE_KEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *authParameters</Declaration>
			
			
			<Anchor>//api/name/authParameters</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderAdminInitiateAuthRequest/authParameters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The authentication parameters. These are inputs corresponding to the &lt;code&gt;AuthFlow&lt;/code&gt; that you are invoking. The required values depend on the value of &lt;code&gt;AuthFlow&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;USERSRPAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SRPA&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (required if the app client is configured with a client secret), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;REFRESHTOKENAUTH/REFRESHTOKEN&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (required if the app client is configured with a client secret), &lt;code&gt;REFRESHTOKEN&lt;/code&gt; (required), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;ADMINNOSRPAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (if app client is configured with client secret), &lt;code&gt;PASSWORD&lt;/code&gt; (required), &lt;code&gt;DEVICEKEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;For &lt;code&gt;CUSTOMAUTH&lt;/code&gt;: &lt;code&gt;USERNAME&lt;/code&gt; (required), &lt;code&gt;SECRETHASH&lt;/code&gt; (if app client is configured with client secret), &lt;code&gt;DEVICE_KEY&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *authParameters</Declaration>
			
			
			<Anchor>//api/name/authParameters</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/setClientId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The app client ID.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientId</Declaration>
			
			
			<Anchor>//api/name/clientId</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/clientId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The app client ID.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientId</Declaration>
			
			
			<Anchor>//api/name/clientId</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderAdminInitiateAuthRequest/clientId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The app client ID.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientId</Declaration>
			
			
			<Anchor>//api/name/clientId</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/setClientMetadata:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This is a random key-value pair map which can contain any key and will be passed to your PreAuthentication Lambda trigger as-is. It can be used to implement additional validations around authentication.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *clientMetadata</Declaration>
			
			
			<Anchor>//api/name/clientMetadata</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/clientMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This is a random key-value pair map which can contain any key and will be passed to your PreAuthentication Lambda trigger as-is. It can be used to implement additional validations around authentication.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *clientMetadata</Declaration>
			
			
			<Anchor>//api/name/clientMetadata</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderAdminInitiateAuthRequest/clientMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This is a random key-value pair map which can contain any key and will be passed to your PreAuthentication Lambda trigger as-is. It can be used to implement additional validations around authentication.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *clientMetadata</Declaration>
			
			
			<Anchor>//api/name/clientMetadata</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/setContextData:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCognitoIdentityProviderContextDataType *contextData</Declaration>
			
			
			<Anchor>//api/name/contextData</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/contextData</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCognitoIdentityProviderContextDataType *contextData</Declaration>
			
			
			<Anchor>//api/name/contextData</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderAdminInitiateAuthRequest/contextData</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSCognitoIdentityProviderContextDataType *contextData</Declaration>
			
			
			<Anchor>//api/name/contextData</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/setUserPoolId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPoolId</Declaration>
			
			
			<Anchor>//api/name/userPoolId</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderAdminInitiateAuthRequest/userPoolId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPoolId</Declaration>
			
			
			<Anchor>//api/name/userPoolId</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderAdminInitiateAuthRequest/userPoolId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPoolId</Declaration>
			
			
			<Anchor>//api/name/userPoolId</Anchor>
            <NodeRef refid="209"/>
		</Token>
		
        
        
	</File>
</Tokens>