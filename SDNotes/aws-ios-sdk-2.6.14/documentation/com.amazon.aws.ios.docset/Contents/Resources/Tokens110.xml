<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSBasicSessionCredentialsProvider.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSBasicSessionCredentialsProvider</TokenIdentifier>
			<Abstract type="html">This credentials provider is intended only for testing purposes.
We strongly discourage embedding AWS credentials in your production apps because they can be easily extracted and abused. Consider using AWSCognitoCredentialsProvider.
Simple session credentials with keys and session token.</Abstract>
			<DeclaredIn>AWSCredentialsProvider.h</DeclaredIn>
            
			
			<NodeRef refid="110"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSBasicSessionCredentialsProvider/initWithAccessKey:secretKey:sessionToken:</TokenIdentifier>
			<Abstract type="html">Instantiates a static credentials provider.</Abstract>
			<DeclaredIn>AWSCredentialsProvider.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithAccessKey:(NSString *)accessKey secretKey:(NSString *)secretKey sessionToken:(NSString *)sessionToken</Declaration>
			<Parameters>
				<Parameter>
					<Name>accessKey</Name>
					<Abstract type="html">An AWS Access key.</Abstract>
				</Parameter><Parameter>
					<Name>secretKey</Name>
					<Abstract type="html">An AWS Secret key.</Abstract>
				</Parameter><Parameter>
					<Name>sessionToken</Name>
					<Abstract type="html">The session token for this session.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An AWS credentials object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithAccessKey:secretKey:sessionToken:</Anchor>
            <NodeRef refid="110"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSBasicSessionCredentialsProvider/credentials</TokenIdentifier>
			<Abstract type="html">Asynchronously returns a valid AWS credentials or an error object if it cannot retrieve valid credentials. It should cache valid credentials as much as possible and refresh them when they are invalid.</Abstract>
			<DeclaredIn>AWSCredentialsProvider.m</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;AWSCredentials*&gt; *)credentials</Declaration>
			
			<ReturnValue><Abstract type="html">A valid AWS credentials or an error object describing the error.</Abstract></ReturnValue>
			<Anchor>//api/name/credentials</Anchor>
            <NodeRef refid="110"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSBasicSessionCredentialsProvider/invalidateCachedTemporaryCredentials</TokenIdentifier>
			<Abstract type="html">Invalidates the cached temporary AWS credentials. If the credentials provider does not cache temporary credentials, this operation is a no-op.</Abstract>
			<DeclaredIn>AWSCredentialsProvider.m</DeclaredIn>
			
			<Declaration>- (void)invalidateCachedTemporaryCredentials</Declaration>
			
			
			<Anchor>//api/name/invalidateCachedTemporaryCredentials</Anchor>
            <NodeRef refid="110"/>
		</Token>
		
        
        
	</File>
</Tokens>