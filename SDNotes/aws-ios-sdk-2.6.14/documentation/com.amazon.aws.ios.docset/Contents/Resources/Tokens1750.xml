<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSQSSendMessageRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSQSSendMessageRequest</TokenIdentifier>
			<Abstract type="html">&lt;p/&gt;
Required parameters: [QueueUrl, MessageBody]</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
            
			
			<NodeRef refid="1750"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/setDelaySeconds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt; The number of seconds (0 to 900 - 15 minutes) to delay a specific message. Messages with a positive &lt;code&gt;DelaySeconds&lt;/code&gt; value become available for processing after the delay time is finished. If you don&apos;t specify a value, the default value for the queue applies. &lt;/p&gt;&lt;note&gt;&lt;p&gt;When you set &lt;code&gt;FifoQueue&lt;/code&gt;, you can&apos;t set &lt;code&gt;DelaySeconds&lt;/code&gt; per message. You can set this parameter only on a queue level.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *delaySeconds</Declaration>
			
			
			<Anchor>//api/name/delaySeconds</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/delaySeconds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt; The number of seconds (0 to 900 - 15 minutes) to delay a specific message. Messages with a positive &lt;code&gt;DelaySeconds&lt;/code&gt; value become available for processing after the delay time is finished. If you don&apos;t specify a value, the default value for the queue applies. &lt;/p&gt;&lt;note&gt;&lt;p&gt;When you set &lt;code&gt;FifoQueue&lt;/code&gt;, you can&apos;t set &lt;code&gt;DelaySeconds&lt;/code&gt; per message. You can set this parameter only on a queue level.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *delaySeconds</Declaration>
			
			
			<Anchor>//api/name/delaySeconds</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSQSSendMessageRequest/delaySeconds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt; The number of seconds (0 to 900 - 15 minutes) to delay a specific message. Messages with a positive &lt;code&gt;DelaySeconds&lt;/code&gt; value become available for processing after the delay time is finished. If you don&apos;t specify a value, the default value for the queue applies. &lt;/p&gt;&lt;note&gt;&lt;p&gt;When you set &lt;code&gt;FifoQueue&lt;/code&gt;, you can&apos;t set &lt;code&gt;DelaySeconds&lt;/code&gt; per message. You can set this parameter only on a queue level.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *delaySeconds</Declaration>
			
			
			<Anchor>//api/name/delaySeconds</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/setMessageAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Each message attribute consists of a Name, Type, and Value. For more information, see Message Attribute Items in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSSQSMessageAttributeValue*&gt; *messageAttributes</Declaration>
			
			
			<Anchor>//api/name/messageAttributes</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/messageAttributes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Each message attribute consists of a Name, Type, and Value. For more information, see Message Attribute Items in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSSQSMessageAttributeValue*&gt; *messageAttributes</Declaration>
			
			
			<Anchor>//api/name/messageAttributes</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSQSSendMessageRequest/messageAttributes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Each message attribute consists of a Name, Type, and Value. For more information, see Message Attribute Items in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSSQSMessageAttributeValue*&gt; *messageAttributes</Declaration>
			
			
			<Anchor>//api/name/messageAttributes</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/setMessageBody:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message to send. String maximum 256 KB in size. For a list of allowed characters, see the preceding note.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageBody</Declaration>
			
			
			<Anchor>//api/name/messageBody</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/messageBody</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message to send. String maximum 256 KB in size. For a list of allowed characters, see the preceding note.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageBody</Declaration>
			
			
			<Anchor>//api/name/messageBody</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSQSSendMessageRequest/messageBody</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message to send. String maximum 256 KB in size. For a list of allowed characters, see the preceding note.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageBody</Declaration>
			
			
			<Anchor>//api/name/messageBody</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/setMessageDeduplicationId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter applies only to FIFO (first-in-first-out) queues.&lt;/p&gt;&lt;p&gt;The token used for deduplication of sent messages. If a message with a particular &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is sent successfully, any messages sent with the same &lt;code&gt;MessageDeduplicationId&lt;/code&gt; are accepted successfully but aren&apos;t delivered during the 5-minute deduplication interval. For more information, see  Exactly-Once Processing in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Every message must have a unique &lt;code&gt;MessageDeduplicationId&lt;/code&gt;,&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You may provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; explicitly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you aren&apos;t able to provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and you enable &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; for your queue, Amazon SQS uses a SHA-256 hash to generate the &lt;code&gt;MessageDeduplicationId&lt;/code&gt; using the body of the message (but not the attributes of the message). &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you don&apos;t provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and the queue doesn&apos;t have &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, the action fails with an error.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the queue has &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, your &lt;code&gt;MessageDeduplicationId&lt;/code&gt; overrides the generated one.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can also use &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; for messages with identical content to be treated as duplicates.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you send one message with &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; enabled and then another message with a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; that is the same as the one generated for the first &lt;code&gt;MessageDeduplicationId&lt;/code&gt;, the two messages are treated as duplicates and only one copy of the message is delivered. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;note&gt;&lt;p&gt;The &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is available to the recipient of the message (this can be useful for troubleshooting delivery issues).&lt;/p&gt;&lt;p&gt;If a message is sent successfully but the acknowledgdment is lost and the message is resent with the same &lt;code&gt;MessageDeduplicationId&lt;/code&gt; after the deduplication interval, Amazon SQS can&apos;t detect duplicate messages.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;The length of &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is 128 characters. &lt;code&gt;MessageDeduplicationId&lt;/code&gt; can contain alphanumeric characters (&lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;A-Z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;) and punctuation (&lt;code&gt;!&quot;#$%&amp;amp;amp;&apos;()*+,-./:;&amp;amp;lt;=&amp;amp;gt;?@[\]^_`{|}~&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;For best practices of using &lt;code&gt;MessageDeduplicationId&lt;/code&gt;, see Using the MessageDeduplicationId Property in the &lt;i&gt;Amazon Simple Queue Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageDeduplicationId</Declaration>
			
			
			<Anchor>//api/name/messageDeduplicationId</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/messageDeduplicationId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter applies only to FIFO (first-in-first-out) queues.&lt;/p&gt;&lt;p&gt;The token used for deduplication of sent messages. If a message with a particular &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is sent successfully, any messages sent with the same &lt;code&gt;MessageDeduplicationId&lt;/code&gt; are accepted successfully but aren&apos;t delivered during the 5-minute deduplication interval. For more information, see  Exactly-Once Processing in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Every message must have a unique &lt;code&gt;MessageDeduplicationId&lt;/code&gt;,&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You may provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; explicitly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you aren&apos;t able to provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and you enable &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; for your queue, Amazon SQS uses a SHA-256 hash to generate the &lt;code&gt;MessageDeduplicationId&lt;/code&gt; using the body of the message (but not the attributes of the message). &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you don&apos;t provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and the queue doesn&apos;t have &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, the action fails with an error.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the queue has &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, your &lt;code&gt;MessageDeduplicationId&lt;/code&gt; overrides the generated one.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can also use &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; for messages with identical content to be treated as duplicates.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you send one message with &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; enabled and then another message with a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; that is the same as the one generated for the first &lt;code&gt;MessageDeduplicationId&lt;/code&gt;, the two messages are treated as duplicates and only one copy of the message is delivered. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;note&gt;&lt;p&gt;The &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is available to the recipient of the message (this can be useful for troubleshooting delivery issues).&lt;/p&gt;&lt;p&gt;If a message is sent successfully but the acknowledgdment is lost and the message is resent with the same &lt;code&gt;MessageDeduplicationId&lt;/code&gt; after the deduplication interval, Amazon SQS can&apos;t detect duplicate messages.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;The length of &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is 128 characters. &lt;code&gt;MessageDeduplicationId&lt;/code&gt; can contain alphanumeric characters (&lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;A-Z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;) and punctuation (&lt;code&gt;!&quot;#$%&amp;amp;amp;&apos;()*+,-./:;&amp;amp;lt;=&amp;amp;gt;?@[\]^_`{|}~&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;For best practices of using &lt;code&gt;MessageDeduplicationId&lt;/code&gt;, see Using the MessageDeduplicationId Property in the &lt;i&gt;Amazon Simple Queue Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageDeduplicationId</Declaration>
			
			
			<Anchor>//api/name/messageDeduplicationId</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSQSSendMessageRequest/messageDeduplicationId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter applies only to FIFO (first-in-first-out) queues.&lt;/p&gt;&lt;p&gt;The token used for deduplication of sent messages. If a message with a particular &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is sent successfully, any messages sent with the same &lt;code&gt;MessageDeduplicationId&lt;/code&gt; are accepted successfully but aren&apos;t delivered during the 5-minute deduplication interval. For more information, see  Exactly-Once Processing in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Every message must have a unique &lt;code&gt;MessageDeduplicationId&lt;/code&gt;,&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You may provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; explicitly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you aren&apos;t able to provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and you enable &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; for your queue, Amazon SQS uses a SHA-256 hash to generate the &lt;code&gt;MessageDeduplicationId&lt;/code&gt; using the body of the message (but not the attributes of the message). &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you don&apos;t provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and the queue doesn&apos;t have &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, the action fails with an error.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the queue has &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, your &lt;code&gt;MessageDeduplicationId&lt;/code&gt; overrides the generated one.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can also use &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; for messages with identical content to be treated as duplicates.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you send one message with &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; enabled and then another message with a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; that is the same as the one generated for the first &lt;code&gt;MessageDeduplicationId&lt;/code&gt;, the two messages are treated as duplicates and only one copy of the message is delivered. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;note&gt;&lt;p&gt;The &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is available to the recipient of the message (this can be useful for troubleshooting delivery issues).&lt;/p&gt;&lt;p&gt;If a message is sent successfully but the acknowledgdment is lost and the message is resent with the same &lt;code&gt;MessageDeduplicationId&lt;/code&gt; after the deduplication interval, Amazon SQS can&apos;t detect duplicate messages.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;The length of &lt;code&gt;MessageDeduplicationId&lt;/code&gt; is 128 characters. &lt;code&gt;MessageDeduplicationId&lt;/code&gt; can contain alphanumeric characters (&lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;A-Z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;) and punctuation (&lt;code&gt;!&quot;#$%&amp;amp;amp;&apos;()*+,-./:;&amp;amp;lt;=&amp;amp;gt;?@[\]^_`{|}~&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;For best practices of using &lt;code&gt;MessageDeduplicationId&lt;/code&gt;, see Using the MessageDeduplicationId Property in the &lt;i&gt;Amazon Simple Queue Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageDeduplicationId</Declaration>
			
			
			<Anchor>//api/name/messageDeduplicationId</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/setMessageGroupId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter applies only to FIFO (first-in-first-out) queues.&lt;/p&gt;&lt;p&gt;The tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). To interleave multiple ordered streams within a single queue, use &lt;code&gt;MessageGroupId&lt;/code&gt; values (for example, session data for multiple users). In this scenario, multiple readers can process the queue, but the session data of each user is processed in a FIFO fashion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You must associate a non-empty &lt;code&gt;MessageGroupId&lt;/code&gt; with a message. If you don&apos;t provide a &lt;code&gt;MessageGroupId&lt;/code&gt;, the action fails.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ReceiveMessage&lt;/code&gt; might return messages with multiple &lt;code&gt;MessageGroupId&lt;/code&gt; values. For each &lt;code&gt;MessageGroupId&lt;/code&gt;, the messages are sorted by time sent. The caller can&apos;t specify a &lt;code&gt;MessageGroupId&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The length of &lt;code&gt;MessageGroupId&lt;/code&gt; is 128 characters. Valid values are alphanumeric characters and punctuation &lt;code&gt;(!&quot;#$%&amp;amp;amp;&apos;()*+,-./:;&amp;amp;lt;=&amp;amp;gt;?@[\]^_`{|}~)&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For best practices of using &lt;code&gt;MessageGroupId&lt;/code&gt;, see Using the MessageGroupId Property in the &lt;i&gt;Amazon Simple Queue Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageGroupId</Declaration>
			
			
			<Anchor>//api/name/messageGroupId</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/messageGroupId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter applies only to FIFO (first-in-first-out) queues.&lt;/p&gt;&lt;p&gt;The tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). To interleave multiple ordered streams within a single queue, use &lt;code&gt;MessageGroupId&lt;/code&gt; values (for example, session data for multiple users). In this scenario, multiple readers can process the queue, but the session data of each user is processed in a FIFO fashion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You must associate a non-empty &lt;code&gt;MessageGroupId&lt;/code&gt; with a message. If you don&apos;t provide a &lt;code&gt;MessageGroupId&lt;/code&gt;, the action fails.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ReceiveMessage&lt;/code&gt; might return messages with multiple &lt;code&gt;MessageGroupId&lt;/code&gt; values. For each &lt;code&gt;MessageGroupId&lt;/code&gt;, the messages are sorted by time sent. The caller can&apos;t specify a &lt;code&gt;MessageGroupId&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The length of &lt;code&gt;MessageGroupId&lt;/code&gt; is 128 characters. Valid values are alphanumeric characters and punctuation &lt;code&gt;(!&quot;#$%&amp;amp;amp;&apos;()*+,-./:;&amp;amp;lt;=&amp;amp;gt;?@[\]^_`{|}~)&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For best practices of using &lt;code&gt;MessageGroupId&lt;/code&gt;, see Using the MessageGroupId Property in the &lt;i&gt;Amazon Simple Queue Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageGroupId</Declaration>
			
			
			<Anchor>//api/name/messageGroupId</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSQSSendMessageRequest/messageGroupId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter applies only to FIFO (first-in-first-out) queues.&lt;/p&gt;&lt;p&gt;The tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). To interleave multiple ordered streams within a single queue, use &lt;code&gt;MessageGroupId&lt;/code&gt; values (for example, session data for multiple users). In this scenario, multiple readers can process the queue, but the session data of each user is processed in a FIFO fashion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You must associate a non-empty &lt;code&gt;MessageGroupId&lt;/code&gt; with a message. If you don&apos;t provide a &lt;code&gt;MessageGroupId&lt;/code&gt;, the action fails.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ReceiveMessage&lt;/code&gt; might return messages with multiple &lt;code&gt;MessageGroupId&lt;/code&gt; values. For each &lt;code&gt;MessageGroupId&lt;/code&gt;, the messages are sorted by time sent. The caller can&apos;t specify a &lt;code&gt;MessageGroupId&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The length of &lt;code&gt;MessageGroupId&lt;/code&gt; is 128 characters. Valid values are alphanumeric characters and punctuation &lt;code&gt;(!&quot;#$%&amp;amp;amp;&apos;()*+,-./:;&amp;amp;lt;=&amp;amp;gt;?@[\]^_`{|}~)&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For best practices of using &lt;code&gt;MessageGroupId&lt;/code&gt;, see Using the MessageGroupId Property in the &lt;i&gt;Amazon Simple Queue Service Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageGroupId</Declaration>
			
			
			<Anchor>//api/name/messageGroupId</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/setQueueUrl:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The URL of the Amazon SQS queue to take action on.&lt;/p&gt;&lt;p&gt;Queue URLs are case-sensitive.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *queueUrl</Declaration>
			
			
			<Anchor>//api/name/queueUrl</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSQSSendMessageRequest/queueUrl</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The URL of the Amazon SQS queue to take action on.&lt;/p&gt;&lt;p&gt;Queue URLs are case-sensitive.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *queueUrl</Declaration>
			
			
			<Anchor>//api/name/queueUrl</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSQSSendMessageRequest/queueUrl</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The URL of the Amazon SQS queue to take action on.&lt;/p&gt;&lt;p&gt;Queue URLs are case-sensitive.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSQSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *queueUrl</Declaration>
			
			
			<Anchor>//api/name/queueUrl</Anchor>
            <NodeRef refid="1750"/>
		</Token>
		
        
        
	</File>
</Tokens>