<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSCognitoIdentityProvider.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProvider</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Using the Amazon Cognito User Pools API, you can create a user pool to manage directories and users. You can authenticate a user to obtain tokens related to user identity and access policies.&lt;/p&gt;&lt;p&gt;This API reference provides information about user pools in Amazon Cognito User Pools.&lt;/p&gt;&lt;p&gt;For more information, see the Amazon Cognito Documentation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
            
			
			<NodeRef refid="183"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProvider/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/defaultCognitoIdentityProvider</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultCognitoIdentityProvider</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultCognitoIdentityProvider</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/registerCognitoIdentityProviderWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (void)registerCognitoIdentityProviderWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerCognitoIdentityProviderWithConfiguration:forKey:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/CognitoIdentityProviderForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerCognitoIdentityProviderWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)CognitoIdentityProviderForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/CognitoIdentityProviderForKey:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/removeCognitoIdentityProviderForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (void)removeCognitoIdentityProviderForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeCognitoIdentityProviderForKey:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/addCustomAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds additional user attributes to the user pool schema.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAddCustomAttributesResponse*&gt; *)addCustomAttributes:(AWSCognitoIdentityProviderAddCustomAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AddCustomAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAddCustomAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/addCustomAttributes:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/addCustomAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds additional user attributes to the user pool schema.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)addCustomAttributes:(AWSCognitoIdentityProviderAddCustomAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAddCustomAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AddCustomAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addCustomAttributes:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminAddUserToGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds the specified user to the specified group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminAddUserToGroupRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)adminAddUserToGroup:(AWSCognitoIdentityProviderAdminAddUserToGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminAddUserToGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminAddUserToGroup:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminAddUserToGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds the specified user to the specified group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminAddUserToGroupRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminAddUserToGroup:(AWSCognitoIdentityProviderAdminAddUserToGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminAddUserToGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminAddUserToGroup:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminConfirmSignUp:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms user registration as an admin without using a confirmation code. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminConfirmSignUpResponse*&gt; *)adminConfirmSignUp:(AWSCognitoIdentityProviderAdminConfirmSignUpRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminConfirmSignUp service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminConfirmSignUpResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminConfirmSignUp:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminConfirmSignUp:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms user registration as an admin without using a confirmation code. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminConfirmSignUp:(AWSCognitoIdentityProviderAdminConfirmSignUpRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminConfirmSignUpResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminConfirmSignUp service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminConfirmSignUp:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminCreateUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new user in the specified user pool and sends a welcome message via email or phone (SMS). This message is based on a template that you configured in your call to or . This template includes your custom sign-up instructions and placeholders for user name and temporary password.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminCreateUserResponse*&gt; *)adminCreateUser:(AWSCognitoIdentityProviderAdminCreateUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminCreateUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminCreateUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnsupportedUserState, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminCreateUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminCreateUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new user in the specified user pool and sends a welcome message via email or phone (SMS). This message is based on a template that you configured in your call to or . This template includes your custom sign-up instructions and placeholders for user name and temporary password.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminCreateUser:(AWSCognitoIdentityProviderAdminCreateUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminCreateUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminCreateUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnsupportedUserState, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminCreateUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a user as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)adminDeleteUser:(AWSCognitoIdentityProviderAdminDeleteUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminDeleteUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a user as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminDeleteUser:(AWSCognitoIdentityProviderAdminDeleteUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminDeleteUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the user attributes in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse*&gt; *)adminDeleteUserAttributes:(AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminDeleteUserAttributes:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the user attributes in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminDeleteUserAttributes:(AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminDeleteUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDisableProviderForUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the user from signing in with the specified external (SAML or social) identity provider. If the user to disable is a Cognito User Pools native username + password user, they are not permitted to use their password to sign-in. If the user to disable is a linked external IdP user, any link between that user and an existing user is removed. The next time the external user (no longer attached to the previously linked &lt;code&gt;DestinationUser&lt;/code&gt;) signs in, they must create a new user account. See .&lt;/p&gt;&lt;p&gt;This action is enabled only for admin access and requires developer credentials.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ProviderName&lt;/code&gt; must match the value specified when creating an IdP for the pool. &lt;/p&gt;&lt;p&gt;To disable a native username + password user, the &lt;code&gt;ProviderName&lt;/code&gt; value must be &lt;code&gt;Cognito&lt;/code&gt; and the &lt;code&gt;ProviderAttributeName&lt;/code&gt; must be &lt;code&gt;CognitoSubject&lt;/code&gt;, with the &lt;code&gt;ProviderAttributeValue&lt;/code&gt; being the name that is used in the user pool for the user.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ProviderAttributeName&lt;/code&gt; must always be &lt;code&gt;CognitoSubject&lt;/code&gt; for social identity providers. The &lt;code&gt;ProviderAttributeValue&lt;/code&gt; must always be the exact subject that was used when the user was originally linked as a source user.&lt;/p&gt;&lt;p&gt;For de-linking a SAML identity, there are two scenarios. If the linked identity has not yet been used to sign-in, the &lt;code&gt;ProviderAttributeName&lt;/code&gt; and &lt;code&gt;ProviderAttributeValue&lt;/code&gt; must be the same values that were used for the &lt;code&gt;SourceUser&lt;/code&gt; when the identities were originally linked in the call. (If the linking was done with &lt;code&gt;ProviderAttributeName&lt;/code&gt; set to &lt;code&gt;CognitoSubject&lt;/code&gt;, the same applies here). However, if the user has already signed in, the &lt;code&gt;ProviderAttributeName&lt;/code&gt; must be &lt;code&gt;CognitoSubject&lt;/code&gt; and &lt;code&gt;ProviderAttributeValue&lt;/code&gt; must be the subject of the SAML assertion.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableProviderForUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableProviderForUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminDisableProviderForUserResponse*&gt; *)adminDisableProviderForUser:(AWSCognitoIdentityProviderAdminDisableProviderForUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDisableProviderForUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminDisableProviderForUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminDisableProviderForUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDisableProviderForUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the user from signing in with the specified external (SAML or social) identity provider. If the user to disable is a Cognito User Pools native username + password user, they are not permitted to use their password to sign-in. If the user to disable is a linked external IdP user, any link between that user and an existing user is removed. The next time the external user (no longer attached to the previously linked &lt;code&gt;DestinationUser&lt;/code&gt;) signs in, they must create a new user account. See .&lt;/p&gt;&lt;p&gt;This action is enabled only for admin access and requires developer credentials.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ProviderName&lt;/code&gt; must match the value specified when creating an IdP for the pool. &lt;/p&gt;&lt;p&gt;To disable a native username + password user, the &lt;code&gt;ProviderName&lt;/code&gt; value must be &lt;code&gt;Cognito&lt;/code&gt; and the &lt;code&gt;ProviderAttributeName&lt;/code&gt; must be &lt;code&gt;CognitoSubject&lt;/code&gt;, with the &lt;code&gt;ProviderAttributeValue&lt;/code&gt; being the name that is used in the user pool for the user.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ProviderAttributeName&lt;/code&gt; must always be &lt;code&gt;CognitoSubject&lt;/code&gt; for social identity providers. The &lt;code&gt;ProviderAttributeValue&lt;/code&gt; must always be the exact subject that was used when the user was originally linked as a source user.&lt;/p&gt;&lt;p&gt;For de-linking a SAML identity, there are two scenarios. If the linked identity has not yet been used to sign-in, the &lt;code&gt;ProviderAttributeName&lt;/code&gt; and &lt;code&gt;ProviderAttributeValue&lt;/code&gt; must be the same values that were used for the &lt;code&gt;SourceUser&lt;/code&gt; when the identities were originally linked in the call. (If the linking was done with &lt;code&gt;ProviderAttributeName&lt;/code&gt; set to &lt;code&gt;CognitoSubject&lt;/code&gt;, the same applies here). However, if the user has already signed in, the &lt;code&gt;ProviderAttributeName&lt;/code&gt; must be &lt;code&gt;CognitoSubject&lt;/code&gt; and &lt;code&gt;ProviderAttributeValue&lt;/code&gt; must be the subject of the SAML assertion.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableProviderForUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableProviderForUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminDisableProviderForUser:(AWSCognitoIdentityProviderAdminDisableProviderForUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminDisableProviderForUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDisableProviderForUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminDisableProviderForUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDisableUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the specified user as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminDisableUserResponse*&gt; *)adminDisableUser:(AWSCognitoIdentityProviderAdminDisableUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDisableUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminDisableUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminDisableUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDisableUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the specified user as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminDisableUser:(AWSCognitoIdentityProviderAdminDisableUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminDisableUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDisableUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminDisableUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminEnableUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables the specified user as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminEnableUserResponse*&gt; *)adminEnableUser:(AWSCognitoIdentityProviderAdminEnableUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminEnableUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminEnableUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminEnableUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminEnableUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables the specified user as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminEnableUser:(AWSCognitoIdentityProviderAdminEnableUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminEnableUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminEnableUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminEnableUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminForgetDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the device, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)adminForgetDevice:(AWSCognitoIdentityProviderAdminForgetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminForgetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminForgetDevice:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminForgetDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the device, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminForgetDevice:(AWSCognitoIdentityProviderAdminForgetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminForgetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminForgetDevice:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminGetDeviceResponse*&gt; *)adminGetDevice:(AWSCognitoIdentityProviderAdminGetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminGetDeviceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/adminGetDevice:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminGetDevice:(AWSCognitoIdentityProviderAdminGetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminGetDeviceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminGetDevice:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the specified user by user name in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminGetUserResponse*&gt; *)adminGetUser:(AWSCognitoIdentityProviderAdminGetUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminGetUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminGetUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the specified user by user name in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminGetUser:(AWSCognitoIdentityProviderAdminGetUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminGetUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminGetUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminInitiateAuth:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminInitiateAuthResponse*&gt; *)adminInitiateAuth:(AWSCognitoIdentityProviderAdminInitiateAuthRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminInitiateAuth service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminInitiateAuthResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed.</Abstract></ReturnValue>
			<Anchor>//api/name/adminInitiateAuth:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminInitiateAuth:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminInitiateAuth:(AWSCognitoIdentityProviderAdminInitiateAuthRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminInitiateAuthResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminInitiateAuth service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminInitiateAuth:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminLinkProviderForUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Links an existing user account in a user pool (&lt;code&gt;DestinationUser&lt;/code&gt;) to an identity from an external identity provider (&lt;code&gt;SourceUser&lt;/code&gt;) based on a specified attribute name and value from the external identity provider. This allows you to create a link from the existing user account to an external federated user identity that has not yet been used to sign in, so that the federated user identity can be used to sign in as the existing user account. &lt;/p&gt;&lt;p&gt; For example, if there is an existing user with a username and password, this API links that user to a federated user identity, so that when the federated user identity is used, the user signs in as the existing user account. &lt;/p&gt;&lt;important&gt;&lt;p&gt;Because this API allows a user with an external federated identity to sign in as an existing user in the user pool, it is critical that it only be used with external identity providers and provider attributes that have been trusted by the application owner.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;See also .&lt;/p&gt;&lt;p&gt;This action is enabled only for admin access and requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminLinkProviderForUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminLinkProviderForUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminLinkProviderForUserResponse*&gt; *)adminLinkProviderForUser:(AWSCognitoIdentityProviderAdminLinkProviderForUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminLinkProviderForUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminLinkProviderForUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminLinkProviderForUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminLinkProviderForUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Links an existing user account in a user pool (&lt;code&gt;DestinationUser&lt;/code&gt;) to an identity from an external identity provider (&lt;code&gt;SourceUser&lt;/code&gt;) based on a specified attribute name and value from the external identity provider. This allows you to create a link from the existing user account to an external federated user identity that has not yet been used to sign in, so that the federated user identity can be used to sign in as the existing user account. &lt;/p&gt;&lt;p&gt; For example, if there is an existing user with a username and password, this API links that user to a federated user identity, so that when the federated user identity is used, the user signs in as the existing user account. &lt;/p&gt;&lt;important&gt;&lt;p&gt;Because this API allows a user with an external federated identity to sign in as an existing user in the user pool, it is critical that it only be used with external identity providers and provider attributes that have been trusted by the application owner.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;See also .&lt;/p&gt;&lt;p&gt;This action is enabled only for admin access and requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminLinkProviderForUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminLinkProviderForUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminLinkProviderForUser:(AWSCognitoIdentityProviderAdminLinkProviderForUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminLinkProviderForUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminLinkProviderForUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminLinkProviderForUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListDevices:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists devices, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminListDevicesResponse*&gt; *)adminListDevices:(AWSCognitoIdentityProviderAdminListDevicesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListDevices service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminListDevicesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/adminListDevices:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListDevices:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists devices, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminListDevices:(AWSCognitoIdentityProviderAdminListDevicesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminListDevicesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListDevices service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminListDevices:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListGroupsForUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the groups that the user belongs to.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListGroupsForUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListGroupsForUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminListGroupsForUserResponse*&gt; *)adminListGroupsForUser:(AWSCognitoIdentityProviderAdminListGroupsForUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListGroupsForUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminListGroupsForUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminListGroupsForUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListGroupsForUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the groups that the user belongs to.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListGroupsForUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListGroupsForUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminListGroupsForUser:(AWSCognitoIdentityProviderAdminListGroupsForUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminListGroupsForUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListGroupsForUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminListGroupsForUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListUserAuthEvents:</TokenIdentifier>
			<Abstract type="html">AdminListUserAuthEvents</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListUserAuthEventsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListUserAuthEventsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminListUserAuthEventsResponse*&gt; *)adminListUserAuthEvents:(AWSCognitoIdentityProviderAdminListUserAuthEventsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListUserAuthEvents service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminListUserAuthEventsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminListUserAuthEvents:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListUserAuthEvents:completionHandler:</TokenIdentifier>
			<Abstract type="html">AdminListUserAuthEvents</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListUserAuthEventsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListUserAuthEventsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminListUserAuthEvents:(AWSCognitoIdentityProviderAdminListUserAuthEventsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminListUserAuthEventsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListUserAuthEvents service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminListUserAuthEvents:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminRemoveUserFromGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes the specified user from the specified group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRemoveUserFromGroupRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)adminRemoveUserFromGroup:(AWSCognitoIdentityProviderAdminRemoveUserFromGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminRemoveUserFromGroup:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminRemoveUserFromGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes the specified user from the specified group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRemoveUserFromGroupRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminRemoveUserFromGroup:(AWSCognitoIdentityProviderAdminRemoveUserFromGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminRemoveUserFromGroup:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminResetUserPassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resets the specified user&apos;s password in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;When a developer calls this API, the current password is invalidated, so it must be changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException exception back and should direct the user down the flow to reset the password, which is the same as the forgot password flow. In addition, if the user pool has phone verification selected and a verified phone number exists for the user, or if email verification is selected and a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminResetUserPasswordResponse*&gt; *)adminResetUserPassword:(AWSCognitoIdentityProviderAdminResetUserPasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminResetUserPassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminResetUserPasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminResetUserPassword:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminResetUserPassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resets the specified user&apos;s password in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;When a developer calls this API, the current password is invalidated, so it must be changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException exception back and should direct the user down the flow to reset the password, which is the same as the forgot password flow. In addition, if the user pool has phone verification selected and a verified phone number exists for the user, or if email verification is selected and a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminResetUserPassword:(AWSCognitoIdentityProviderAdminResetUserPasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminResetUserPasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminResetUserPassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminResetUserPassword:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminRespondToAuthChallenge:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to an authentication challenge, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse*&gt; *)adminRespondToAuthChallenge:(AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/adminRespondToAuthChallenge:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminRespondToAuthChallenge:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to an authentication challenge, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminRespondToAuthChallenge:(AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminRespondToAuthChallenge:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminSetUserMFAPreference:</TokenIdentifier>
			<Abstract type="html">AdminSetUserMFAPreference</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserMFAPreferenceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserMFAPreferenceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminSetUserMFAPreferenceResponse*&gt; *)adminSetUserMFAPreference:(AWSCognitoIdentityProviderAdminSetUserMFAPreferenceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminSetUserMFAPreference service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminSetUserMFAPreferenceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminSetUserMFAPreference:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminSetUserMFAPreference:completionHandler:</TokenIdentifier>
			<Abstract type="html">AdminSetUserMFAPreference</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserMFAPreferenceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserMFAPreferenceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminSetUserMFAPreference:(AWSCognitoIdentityProviderAdminSetUserMFAPreferenceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminSetUserMFAPreferenceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminSetUserMFAPreference service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminSetUserMFAPreference:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminSetUserSettings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets all the user settings for a specified user name. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminSetUserSettingsResponse*&gt; *)adminSetUserSettings:(AWSCognitoIdentityProviderAdminSetUserSettingsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminSetUserSettings service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminSetUserSettingsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminSetUserSettings:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminSetUserSettings:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets all the user settings for a specified user name. Works on any user.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminSetUserSettings:(AWSCognitoIdentityProviderAdminSetUserSettingsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminSetUserSettingsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminSetUserSettings service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminSetUserSettings:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateAuthEventFeedback:</TokenIdentifier>
			<Abstract type="html">AdminUpdateAuthEventFeedback</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackResponse*&gt; *)adminUpdateAuthEventFeedback:(AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateAuthEventFeedback service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminUpdateAuthEventFeedback:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateAuthEventFeedback:completionHandler:</TokenIdentifier>
			<Abstract type="html">AdminUpdateAuthEventFeedback</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminUpdateAuthEventFeedback:(AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminUpdateAuthEventFeedbackResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateAuthEventFeedback service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminUpdateAuthEventFeedback:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateDeviceStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse*&gt; *)adminUpdateDeviceStatus:(AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminUpdateDeviceStatus:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateDeviceStatus:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminUpdateDeviceStatus:(AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminUpdateDeviceStatus:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user&apos;s attributes, including developer attributes, as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;For custom attributes, you must prepend the &lt;code&gt;custom:&lt;/code&gt; prefix to the attribute name.&lt;/p&gt;&lt;p&gt;In addition to updating user attributes, this API can also be used to mark phone and email as verified.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse*&gt; *)adminUpdateUserAttributes:(AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminUpdateUserAttributes:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user&apos;s attributes, including developer attributes, as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;For custom attributes, you must prepend the &lt;code&gt;custom:&lt;/code&gt; prefix to the attribute name.&lt;/p&gt;&lt;p&gt;In addition to updating user attributes, this API can also be used to mark phone and email as verified.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminUpdateUserAttributes:(AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminUpdateUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUserGlobalSignOut:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse*&gt; *)adminUserGlobalSignOut:(AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminUserGlobalSignOut:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUserGlobalSignOut:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices, as an administrator.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminUserGlobalSignOut:(AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminUserGlobalSignOut:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/associateSoftwareToken:</TokenIdentifier>
			<Abstract type="html">AssociateSoftwareToken</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAssociateSoftwareTokenRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAssociateSoftwareTokenResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAssociateSoftwareTokenResponse*&gt; *)associateSoftwareToken:(AWSCognitoIdentityProviderAssociateSoftwareTokenRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AssociateSoftwareToken service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAssociateSoftwareTokenResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/associateSoftwareToken:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/associateSoftwareToken:completionHandler:</TokenIdentifier>
			<Abstract type="html">AssociateSoftwareToken</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAssociateSoftwareTokenRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAssociateSoftwareTokenResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)associateSoftwareToken:(AWSCognitoIdentityProviderAssociateSoftwareTokenRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAssociateSoftwareTokenResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AssociateSoftwareToken service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/associateSoftwareToken:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/changePassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Changes the password for a specified user in a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderChangePasswordResponse*&gt; *)changePassword:(AWSCognitoIdentityProviderChangePasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ChangePassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderChangePasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/changePassword:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/changePassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Changes the password for a specified user in a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)changePassword:(AWSCognitoIdentityProviderChangePasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderChangePasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ChangePassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/changePassword:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms tracking of the device. This API call is the call that begins device tracking.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderConfirmDeviceResponse*&gt; *)confirmDevice:(AWSCognitoIdentityProviderConfirmDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderConfirmDeviceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/confirmDevice:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms tracking of the device. This API call is the call that begins device tracking.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)confirmDevice:(AWSCognitoIdentityProviderConfirmDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderConfirmDeviceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/confirmDevice:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmForgotPassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to enter a confirmation code to reset a forgotten password.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderConfirmForgotPasswordResponse*&gt; *)confirmForgotPassword:(AWSCognitoIdentityProviderConfirmForgotPasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmForgotPassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderConfirmForgotPasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/confirmForgotPassword:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmForgotPassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to enter a confirmation code to reset a forgotten password.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)confirmForgotPassword:(AWSCognitoIdentityProviderConfirmForgotPasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderConfirmForgotPasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmForgotPassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/confirmForgotPassword:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmSignUp:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms registration of a user and handles the existing alias from a previous user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderConfirmSignUpResponse*&gt; *)confirmSignUp:(AWSCognitoIdentityProviderConfirmSignUpRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmSignUp service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderConfirmSignUpResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/confirmSignUp:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmSignUp:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms registration of a user and handles the existing alias from a previous user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)confirmSignUp:(AWSCognitoIdentityProviderConfirmSignUpRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderConfirmSignUpResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmSignUp service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/confirmSignUp:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new group in the specified user pool.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateGroupResponse*&gt; *)createGroup:(AWSCognitoIdentityProviderCreateGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateGroupResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorGroupExists, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createGroup:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new group in the specified user pool.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createGroup:(AWSCognitoIdentityProviderCreateGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorGroupExists, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createGroup:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createIdentityProvider:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an identity provider for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateIdentityProviderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateIdentityProviderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateIdentityProviderResponse*&gt; *)createIdentityProvider:(AWSCognitoIdentityProviderCreateIdentityProviderRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateIdentityProvider service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateIdentityProviderResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorDuplicateProvider, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createIdentityProvider:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createIdentityProvider:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an identity provider for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateIdentityProviderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateIdentityProviderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createIdentityProvider:(AWSCognitoIdentityProviderCreateIdentityProviderRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateIdentityProviderResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateIdentityProvider service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorDuplicateProvider, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createIdentityProvider:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createResourceServer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new OAuth2.0 resource server and defines custom scopes in it.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateResourceServerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateResourceServerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateResourceServerResponse*&gt; *)createResourceServer:(AWSCognitoIdentityProviderCreateResourceServerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateResourceServer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateResourceServerResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createResourceServer:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createResourceServer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new OAuth2.0 resource server and defines custom scopes in it.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateResourceServerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateResourceServerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createResourceServer:(AWSCognitoIdentityProviderCreateResourceServerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateResourceServerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateResourceServer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createResourceServer:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateUserImportJobResponse*&gt; *)createUserImportJob:(AWSCognitoIdentityProviderCreateUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createUserImportJob:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createUserImportJob:(AWSCognitoIdentityProviderCreateUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new Amazon Cognito user pool and sets the password policy for the pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateUserPoolResponse*&gt; *)createUserPool:(AWSCognitoIdentityProviderCreateUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateUserPoolResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolTagging, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createUserPool:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new Amazon Cognito user pool and sets the password policy for the pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createUserPool:(AWSCognitoIdentityProviderCreateUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateUserPoolResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolTagging, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createUserPool:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateUserPoolClientResponse*&gt; *)createUserPoolClient:(AWSCognitoIdentityProviderCreateUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateUserPoolClientResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorScopeDoesNotExist, AWSCognitoIdentityProviderErrorInvalidOAuthFlow, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createUserPoolClient:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createUserPoolClient:(AWSCognitoIdentityProviderCreateUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateUserPoolClientResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorScopeDoesNotExist, AWSCognitoIdentityProviderErrorInvalidOAuthFlow, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPoolDomain:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new domain for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateUserPoolDomainResponse*&gt; *)createUserPoolDomain:(AWSCognitoIdentityProviderCreateUserPoolDomainRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPoolDomain service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateUserPoolDomainResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createUserPoolDomain:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPoolDomain:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new domain for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createUserPoolDomain:(AWSCognitoIdentityProviderCreateUserPoolDomainRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateUserPoolDomainResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPoolDomain service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createUserPoolDomain:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a group. Currently only groups with no members can be deleted.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteGroupRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteGroup:(AWSCognitoIdentityProviderDeleteGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteGroup:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a group. Currently only groups with no members can be deleted.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteGroupRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteGroup:(AWSCognitoIdentityProviderDeleteGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteGroup:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteIdentityProvider:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an identity provider for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteIdentityProviderRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteIdentityProvider:(AWSCognitoIdentityProviderDeleteIdentityProviderRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteIdentityProvider service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnsupportedIdentityProvider, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteIdentityProvider:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteIdentityProvider:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes an identity provider for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteIdentityProviderRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteIdentityProvider:(AWSCognitoIdentityProviderDeleteIdentityProviderRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteIdentityProvider service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnsupportedIdentityProvider, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteIdentityProvider:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteResourceServer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a resource server.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteResourceServerRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteResourceServer:(AWSCognitoIdentityProviderDeleteResourceServerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteResourceServer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteResourceServer:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteResourceServer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a resource server.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteResourceServerRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteResourceServer:(AWSCognitoIdentityProviderDeleteResourceServerRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteResourceServer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteResourceServer:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to delete himself or herself.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteUser:(AWSCognitoIdentityProviderDeleteUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to delete himself or herself.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUser:(AWSCognitoIdentityProviderDeleteUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the attributes for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDeleteUserAttributesResponse*&gt; *)deleteUserAttributes:(AWSCognitoIdentityProviderDeleteUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDeleteUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUserAttributes:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the attributes for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUserAttributes:(AWSCognitoIdentityProviderDeleteUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDeleteUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteUserPool:(AWSCognitoIdentityProviderDeleteUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUserPool:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUserPool:(AWSCognitoIdentityProviderDeleteUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUserPool:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to delete the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolClientRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteUserPoolClient:(AWSCognitoIdentityProviderDeleteUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUserPoolClient:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to delete the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolClientRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUserPoolClient:(AWSCognitoIdentityProviderDeleteUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPoolDomain:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a domain for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDeleteUserPoolDomainResponse*&gt; *)deleteUserPoolDomain:(AWSCognitoIdentityProviderDeleteUserPoolDomainRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPoolDomain service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDeleteUserPoolDomainResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUserPoolDomain:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPoolDomain:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a domain for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUserPoolDomain:(AWSCognitoIdentityProviderDeleteUserPoolDomainRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDeleteUserPoolDomainResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPoolDomain service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUserPoolDomain:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeIdentityProvider:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about a specific identity provider.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeIdentityProviderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeIdentityProviderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeIdentityProviderResponse*&gt; *)describeIdentityProvider:(AWSCognitoIdentityProviderDescribeIdentityProviderRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeIdentityProvider service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeIdentityProviderResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeIdentityProvider:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeIdentityProvider:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about a specific identity provider.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeIdentityProviderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeIdentityProviderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeIdentityProvider:(AWSCognitoIdentityProviderDescribeIdentityProviderRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeIdentityProviderResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeIdentityProvider service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeIdentityProvider:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeResourceServer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a resource server.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeResourceServerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeResourceServerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeResourceServerResponse*&gt; *)describeResourceServer:(AWSCognitoIdentityProviderDescribeResourceServerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeResourceServer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeResourceServerResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeResourceServer:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeResourceServer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes a resource server.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeResourceServerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeResourceServerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeResourceServer:(AWSCognitoIdentityProviderDescribeResourceServerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeResourceServerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeResourceServer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeResourceServer:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeRiskConfiguration:</TokenIdentifier>
			<Abstract type="html">DescribeRiskConfiguration</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeRiskConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeRiskConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeRiskConfigurationResponse*&gt; *)describeRiskConfiguration:(AWSCognitoIdentityProviderDescribeRiskConfigurationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeRiskConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeRiskConfigurationResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeRiskConfiguration:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeRiskConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">DescribeRiskConfiguration</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeRiskConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeRiskConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeRiskConfiguration:(AWSCognitoIdentityProviderDescribeRiskConfigurationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeRiskConfigurationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeRiskConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeRiskConfiguration:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeUserImportJobResponse*&gt; *)describeUserImportJob:(AWSCognitoIdentityProviderDescribeUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeUserImportJob:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeUserImportJob:(AWSCognitoIdentityProviderDescribeUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the configuration information and metadata of the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeUserPoolResponse*&gt; *)describeUserPool:(AWSCognitoIdentityProviderDescribeUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeUserPoolResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolTagging, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeUserPool:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the configuration information and metadata of the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeUserPool:(AWSCognitoIdentityProviderDescribeUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeUserPoolResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolTagging, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeUserPool:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Client method for returning the configuration information and metadata of the specified user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeUserPoolClientResponse*&gt; *)describeUserPoolClient:(AWSCognitoIdentityProviderDescribeUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeUserPoolClientResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeUserPoolClient:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Client method for returning the configuration information and metadata of the specified user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeUserPoolClient:(AWSCognitoIdentityProviderDescribeUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeUserPoolClientResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPoolDomain:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about a domain.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeUserPoolDomainResponse*&gt; *)describeUserPoolDomain:(AWSCognitoIdentityProviderDescribeUserPoolDomainRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPoolDomain service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeUserPoolDomainResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeUserPoolDomain:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPoolDomain:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets information about a domain.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolDomainRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolDomainResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeUserPoolDomain:(AWSCognitoIdentityProviderDescribeUserPoolDomainRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeUserPoolDomainResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPoolDomain service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeUserPoolDomain:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgetDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the specified device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)forgetDevice:(AWSCognitoIdentityProviderForgetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/forgetDevice:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgetDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the specified device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)forgetDevice:(AWSCognitoIdentityProviderForgetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/forgetDevice:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgotPassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user&apos;s password. For the &lt;code&gt;Username&lt;/code&gt; parameter, you can use the username or user alias. If a verified phone number exists for the user, the confirmation code is sent to the phone number. Otherwise, if a verified email exists, the confirmation code is sent to the email. If neither a verified phone number nor a verified email exists, &lt;code&gt;InvalidParameterException&lt;/code&gt; is thrown. To use the confirmation code for resetting the password, call .&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderForgotPasswordResponse*&gt; *)forgotPassword:(AWSCognitoIdentityProviderForgotPasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgotPassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderForgotPasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/forgotPassword:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgotPassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user&apos;s password. For the &lt;code&gt;Username&lt;/code&gt; parameter, you can use the username or user alias. If a verified phone number exists for the user, the confirmation code is sent to the phone number. Otherwise, if a verified email exists, the confirmation code is sent to the email. If neither a verified phone number nor a verified email exists, &lt;code&gt;InvalidParameterException&lt;/code&gt; is thrown. To use the confirmation code for resetting the password, call .&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)forgotPassword:(AWSCognitoIdentityProviderForgotPasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderForgotPasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgotPassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/forgotPassword:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getCSVHeader:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the header information for the .csv file to be used as input for the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetCSVHeaderResponse*&gt; *)getCSVHeader:(AWSCognitoIdentityProviderGetCSVHeaderRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetCSVHeader service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetCSVHeaderResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getCSVHeader:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getCSVHeader:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the header information for the .csv file to be used as input for the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getCSVHeader:(AWSCognitoIdentityProviderGetCSVHeaderRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetCSVHeaderResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetCSVHeader service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCSVHeader:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetDeviceResponse*&gt; *)getDevice:(AWSCognitoIdentityProviderGetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetDeviceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getDevice:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getDevice:(AWSCognitoIdentityProviderGetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetDeviceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getDevice:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetGroupResponse*&gt; *)getGroup:(AWSCognitoIdentityProviderGetGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetGroupResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getGroup:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets a group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getGroup:(AWSCognitoIdentityProviderGetGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getGroup:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getIdentityProviderByIdentifier:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the specified identity provider.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetIdentityProviderByIdentifierRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetIdentityProviderByIdentifierResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetIdentityProviderByIdentifierResponse*&gt; *)getIdentityProviderByIdentifier:(AWSCognitoIdentityProviderGetIdentityProviderByIdentifierRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityProviderByIdentifier service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetIdentityProviderByIdentifierResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getIdentityProviderByIdentifier:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getIdentityProviderByIdentifier:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the specified identity provider.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetIdentityProviderByIdentifierRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetIdentityProviderByIdentifierResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getIdentityProviderByIdentifier:(AWSCognitoIdentityProviderGetIdentityProviderByIdentifierRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetIdentityProviderByIdentifierResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetIdentityProviderByIdentifier service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getIdentityProviderByIdentifier:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getSigningCertificate:</TokenIdentifier>
			<Abstract type="html">GetSigningCertificate</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetSigningCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetSigningCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetSigningCertificateResponse*&gt; *)getSigningCertificate:(AWSCognitoIdentityProviderGetSigningCertificateRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetSigningCertificate service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetSigningCertificateResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorResourceNotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/getSigningCertificate:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getSigningCertificate:completionHandler:</TokenIdentifier>
			<Abstract type="html">GetSigningCertificate</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetSigningCertificateRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetSigningCertificateResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getSigningCertificate:(AWSCognitoIdentityProviderGetSigningCertificateRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetSigningCertificateResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetSigningCertificate service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorResourceNotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSigningCertificate:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUICustomization:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the UI Customization information for a particular app client&apos;s app UI, if there is something set. If nothing is set for the particular client, but there is an existing pool level customization (app &lt;code&gt;clientId&lt;/code&gt; will be &lt;code&gt;ALL&lt;/code&gt;), then that is returned. If nothing is present, then an empty shape is returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUICustomizationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUICustomizationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetUICustomizationResponse*&gt; *)getUICustomization:(AWSCognitoIdentityProviderGetUICustomizationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUICustomization service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetUICustomizationResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getUICustomization:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUICustomization:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the UI Customization information for a particular app client&apos;s app UI, if there is something set. If nothing is set for the particular client, but there is an existing pool level customization (app &lt;code&gt;clientId&lt;/code&gt; will be &lt;code&gt;ALL&lt;/code&gt;), then that is returned. If nothing is present, then an empty shape is returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUICustomizationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUICustomizationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getUICustomization:(AWSCognitoIdentityProviderGetUICustomizationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetUICustomizationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUICustomization service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getUICustomization:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attributes and metadata for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetUserResponse*&gt; *)getUser:(AWSCognitoIdentityProviderGetUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getUser:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attributes and metadata for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getUser:(AWSCognitoIdentityProviderGetUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getUser:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUserAttributeVerificationCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attribute verification code for the specified attribute name.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse*&gt; *)getUserAttributeVerificationCode:(AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getUserAttributeVerificationCode:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUserAttributeVerificationCode:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attribute verification code for the specified attribute name.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getUserAttributeVerificationCode:(AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getUserAttributeVerificationCode:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUserPoolMfaConfig:</TokenIdentifier>
			<Abstract type="html">GetUserPoolMfaConfig</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserPoolMfaConfigRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserPoolMfaConfigResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetUserPoolMfaConfigResponse*&gt; *)getUserPoolMfaConfig:(AWSCognitoIdentityProviderGetUserPoolMfaConfigRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUserPoolMfaConfig service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetUserPoolMfaConfigResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getUserPoolMfaConfig:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUserPoolMfaConfig:completionHandler:</TokenIdentifier>
			<Abstract type="html">GetUserPoolMfaConfig</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserPoolMfaConfigRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserPoolMfaConfigResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getUserPoolMfaConfig:(AWSCognitoIdentityProviderGetUserPoolMfaConfigRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetUserPoolMfaConfigResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUserPoolMfaConfig service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getUserPoolMfaConfig:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/globalSignOut:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGlobalSignOutResponse*&gt; *)globalSignOut:(AWSCognitoIdentityProviderGlobalSignOutRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GlobalSignOut service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGlobalSignOutResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/globalSignOut:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/globalSignOut:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)globalSignOut:(AWSCognitoIdentityProviderGlobalSignOutRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGlobalSignOutResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GlobalSignOut service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/globalSignOut:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/initiateAuth:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderInitiateAuthResponse*&gt; *)initiateAuth:(AWSCognitoIdentityProviderInitiateAuthRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the InitiateAuth service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderInitiateAuthResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/initiateAuth:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/initiateAuth:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)initiateAuth:(AWSCognitoIdentityProviderInitiateAuthRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderInitiateAuthResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the InitiateAuth service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initiateAuth:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listDevices:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListDevicesResponse*&gt; *)listDevices:(AWSCognitoIdentityProviderListDevicesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListDevices service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListDevicesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listDevices:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listDevices:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listDevices:(AWSCognitoIdentityProviderListDevicesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListDevicesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListDevices service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listDevices:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the groups associated with a user pool.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListGroupsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListGroupsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListGroupsResponse*&gt; *)listGroups:(AWSCognitoIdentityProviderListGroupsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListGroups service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListGroupsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listGroups:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listGroups:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the groups associated with a user pool.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListGroupsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListGroupsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listGroups:(AWSCognitoIdentityProviderListGroupsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListGroupsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListGroups service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listGroups:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listIdentityProviders:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists information about all identity providers for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListIdentityProvidersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListIdentityProvidersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListIdentityProvidersResponse*&gt; *)listIdentityProviders:(AWSCognitoIdentityProviderListIdentityProvidersRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIdentityProviders service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListIdentityProvidersResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listIdentityProviders:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listIdentityProviders:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists information about all identity providers for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListIdentityProvidersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListIdentityProvidersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listIdentityProviders:(AWSCognitoIdentityProviderListIdentityProvidersRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListIdentityProvidersResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListIdentityProviders service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listIdentityProviders:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listResourceServers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the resource servers for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListResourceServersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListResourceServersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListResourceServersResponse*&gt; *)listResourceServers:(AWSCognitoIdentityProviderListResourceServersRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListResourceServers service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListResourceServersResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listResourceServers:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listResourceServers:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the resource servers for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListResourceServersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListResourceServersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listResourceServers:(AWSCognitoIdentityProviderListResourceServersRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListResourceServersResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListResourceServers service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listResourceServers:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserImportJobs:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user import jobs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUserImportJobsResponse*&gt; *)listUserImportJobs:(AWSCognitoIdentityProviderListUserImportJobsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserImportJobs service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUserImportJobsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUserImportJobs:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserImportJobs:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user import jobs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUserImportJobs:(AWSCognitoIdentityProviderListUserImportJobsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUserImportJobsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserImportJobs service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUserImportJobs:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPoolClients:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the clients that have been created for the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUserPoolClientsResponse*&gt; *)listUserPoolClients:(AWSCognitoIdentityProviderListUserPoolClientsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPoolClients service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUserPoolClientsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUserPoolClients:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPoolClients:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the clients that have been created for the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUserPoolClients:(AWSCognitoIdentityProviderListUserPoolClientsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUserPoolClientsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPoolClients service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUserPoolClients:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPools:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user pools associated with an AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUserPoolsResponse*&gt; *)listUserPools:(AWSCognitoIdentityProviderListUserPoolsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPools service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUserPoolsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUserPools:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPools:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user pools associated with an AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUserPools:(AWSCognitoIdentityProviderListUserPoolsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUserPoolsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPools service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUserPools:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUsers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the users in the Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUsersResponse*&gt; *)listUsers:(AWSCognitoIdentityProviderListUsersRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUsers service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUsersResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUsers:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUsers:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the users in the Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUsers:(AWSCognitoIdentityProviderListUsersRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUsersResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUsers service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUsers:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUsersInGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the users in the specified group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersInGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersInGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUsersInGroupResponse*&gt; *)listUsersInGroup:(AWSCognitoIdentityProviderListUsersInGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUsersInGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUsersInGroupResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUsersInGroup:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUsersInGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the users in the specified group.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersInGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersInGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUsersInGroup:(AWSCognitoIdentityProviderListUsersInGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUsersInGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUsersInGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUsersInGroup:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/resendConfirmationCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resends the confirmation (for confirmation of registration) to a specific user in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderResendConfirmationCodeResponse*&gt; *)resendConfirmationCode:(AWSCognitoIdentityProviderResendConfirmationCodeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ResendConfirmationCode service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderResendConfirmationCodeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/resendConfirmationCode:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/resendConfirmationCode:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resends the confirmation (for confirmation of registration) to a specific user in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)resendConfirmationCode:(AWSCognitoIdentityProviderResendConfirmationCodeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderResendConfirmationCodeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ResendConfirmationCode service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/resendConfirmationCode:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/respondToAuthChallenge:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to the authentication challenge.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderRespondToAuthChallengeResponse*&gt; *)respondToAuthChallenge:(AWSCognitoIdentityProviderRespondToAuthChallengeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RespondToAuthChallenge service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderRespondToAuthChallengeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound.</Abstract></ReturnValue>
			<Anchor>//api/name/respondToAuthChallenge:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/respondToAuthChallenge:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to the authentication challenge.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)respondToAuthChallenge:(AWSCognitoIdentityProviderRespondToAuthChallengeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderRespondToAuthChallengeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RespondToAuthChallenge service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/respondToAuthChallenge:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setRiskConfiguration:</TokenIdentifier>
			<Abstract type="html">SetRiskConfiguration</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetRiskConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetRiskConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSetRiskConfigurationResponse*&gt; *)setRiskConfiguration:(AWSCognitoIdentityProviderSetRiskConfigurationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetRiskConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSetRiskConfigurationResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/setRiskConfiguration:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setRiskConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">SetRiskConfiguration</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetRiskConfigurationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetRiskConfigurationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setRiskConfiguration:(AWSCognitoIdentityProviderSetRiskConfigurationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSetRiskConfigurationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetRiskConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRiskConfiguration:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUICustomization:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the UI customization information for a user pool&apos;s built-in app UI.&lt;/p&gt;&lt;p&gt;You can specify app UI customization settings for a single client (with a specific &lt;code&gt;clientId&lt;/code&gt;) or for all clients (by setting the &lt;code&gt;clientId&lt;/code&gt; to &lt;code&gt;ALL&lt;/code&gt;). If you specify &lt;code&gt;ALL&lt;/code&gt;, the default configuration will be used for every client that has no UI customization set previously. If you specify UI customization settings for a particular client, it will no longer fall back to the &lt;code&gt;ALL&lt;/code&gt; configuration. &lt;/p&gt;&lt;note&gt;&lt;p&gt;To use this API, your user pool must have a domain associated with it. Otherwise, there is no place to host the app&apos;s pages, and the service will throw an error.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUICustomizationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUICustomizationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSetUICustomizationResponse*&gt; *)setUICustomization:(AWSCognitoIdentityProviderSetUICustomizationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUICustomization service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSetUICustomizationResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/setUICustomization:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUICustomization:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the UI customization information for a user pool&apos;s built-in app UI.&lt;/p&gt;&lt;p&gt;You can specify app UI customization settings for a single client (with a specific &lt;code&gt;clientId&lt;/code&gt;) or for all clients (by setting the &lt;code&gt;clientId&lt;/code&gt; to &lt;code&gt;ALL&lt;/code&gt;). If you specify &lt;code&gt;ALL&lt;/code&gt;, the default configuration will be used for every client that has no UI customization set previously. If you specify UI customization settings for a particular client, it will no longer fall back to the &lt;code&gt;ALL&lt;/code&gt; configuration. &lt;/p&gt;&lt;note&gt;&lt;p&gt;To use this API, your user pool must have a domain associated with it. Otherwise, there is no place to host the app&apos;s pages, and the service will throw an error.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUICustomizationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUICustomizationResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setUICustomization:(AWSCognitoIdentityProviderSetUICustomizationRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSetUICustomizationResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUICustomization service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUICustomization:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserMFAPreference:</TokenIdentifier>
			<Abstract type="html">SetUserMFAPreference</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserMFAPreferenceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserMFAPreferenceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSetUserMFAPreferenceResponse*&gt; *)setUserMFAPreference:(AWSCognitoIdentityProviderSetUserMFAPreferenceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserMFAPreference service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSetUserMFAPreferenceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/setUserMFAPreference:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserMFAPreference:completionHandler:</TokenIdentifier>
			<Abstract type="html">SetUserMFAPreference</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserMFAPreferenceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserMFAPreferenceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setUserMFAPreference:(AWSCognitoIdentityProviderSetUserMFAPreferenceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSetUserMFAPreferenceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserMFAPreference service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUserMFAPreference:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserPoolMfaConfig:</TokenIdentifier>
			<Abstract type="html">SetUserPoolMfaConfig</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserPoolMfaConfigRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserPoolMfaConfigResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSetUserPoolMfaConfigResponse*&gt; *)setUserPoolMfaConfig:(AWSCognitoIdentityProviderSetUserPoolMfaConfigRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserPoolMfaConfig service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSetUserPoolMfaConfigResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/setUserPoolMfaConfig:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserPoolMfaConfig:completionHandler:</TokenIdentifier>
			<Abstract type="html">SetUserPoolMfaConfig</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserPoolMfaConfigRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserPoolMfaConfigResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setUserPoolMfaConfig:(AWSCognitoIdentityProviderSetUserPoolMfaConfigRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSetUserPoolMfaConfigResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserPoolMfaConfig service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUserPoolMfaConfig:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserSettings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the user settings like multi-factor authentication (MFA). If MFA is to be removed for a particular attribute pass the attribute with code delivery as null. If null list is passed, all MFA options are removed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSetUserSettingsResponse*&gt; *)setUserSettings:(AWSCognitoIdentityProviderSetUserSettingsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserSettings service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSetUserSettingsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/setUserSettings:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserSettings:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the user settings like multi-factor authentication (MFA). If MFA is to be removed for a particular attribute pass the attribute with code delivery as null. If null list is passed, all MFA options are removed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setUserSettings:(AWSCognitoIdentityProviderSetUserSettingsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSetUserSettingsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserSettings service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUserSettings:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/signUp:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers the user in the specified user pool and creates a user name, password, and user attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSignUpResponse*&gt; *)signUp:(AWSCognitoIdentityProviderSignUpRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SignUp service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSignUpResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/signUp:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/signUp:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers the user in the specified user pool and creates a user name, password, and user attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)signUp:(AWSCognitoIdentityProviderSignUpRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSignUpResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SignUp service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/signUp:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/startUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Starts the user import.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderStartUserImportJobResponse*&gt; *)startUserImportJob:(AWSCognitoIdentityProviderStartUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StartUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderStartUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/startUserImportJob:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/startUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Starts the user import.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)startUserImportJob:(AWSCognitoIdentityProviderStartUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderStartUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StartUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/stopUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Stops the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderStopUserImportJobResponse*&gt; *)stopUserImportJob:(AWSCognitoIdentityProviderStopUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StopUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderStopUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/stopUserImportJob:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/stopUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Stops the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)stopUserImportJob:(AWSCognitoIdentityProviderStopUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderStopUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StopUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stopUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateAuthEventFeedback:</TokenIdentifier>
			<Abstract type="html">UpdateAuthEventFeedback</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateAuthEventFeedbackRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateAuthEventFeedbackResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateAuthEventFeedbackResponse*&gt; *)updateAuthEventFeedback:(AWSCognitoIdentityProviderUpdateAuthEventFeedbackRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAuthEventFeedback service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateAuthEventFeedbackResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateAuthEventFeedback:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateAuthEventFeedback:completionHandler:</TokenIdentifier>
			<Abstract type="html">UpdateAuthEventFeedback</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateAuthEventFeedbackRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateAuthEventFeedbackResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateAuthEventFeedback:(AWSCognitoIdentityProviderUpdateAuthEventFeedbackRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateAuthEventFeedbackResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAuthEventFeedback service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserPoolAddOnNotEnabled, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateAuthEventFeedback:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateDeviceStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateDeviceStatusResponse*&gt; *)updateDeviceStatus:(AWSCognitoIdentityProviderUpdateDeviceStatusRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateDeviceStatus service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateDeviceStatusResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateDeviceStatus:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateDeviceStatus:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateDeviceStatus:(AWSCognitoIdentityProviderUpdateDeviceStatusRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateDeviceStatusResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateDeviceStatus service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateDeviceStatus:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified group with the specified attributes.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateGroupResponse*&gt; *)updateGroup:(AWSCognitoIdentityProviderUpdateGroupRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateGroupResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateGroup:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified group with the specified attributes.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateGroupRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateGroupResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateGroup:(AWSCognitoIdentityProviderUpdateGroupRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateGroupResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateGroup:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateIdentityProvider:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates identity provider information for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateIdentityProviderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateIdentityProviderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateIdentityProviderResponse*&gt; *)updateIdentityProvider:(AWSCognitoIdentityProviderUpdateIdentityProviderRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateIdentityProvider service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateIdentityProviderResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnsupportedIdentityProvider, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateIdentityProvider:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateIdentityProvider:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates identity provider information for a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateIdentityProviderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateIdentityProviderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateIdentityProvider:(AWSCognitoIdentityProviderUpdateIdentityProviderRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateIdentityProviderResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateIdentityProvider service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnsupportedIdentityProvider, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateIdentityProvider:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateResourceServer:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the name and scopes of resource server. All other fields are read-only.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateResourceServerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateResourceServerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateResourceServerResponse*&gt; *)updateResourceServer:(AWSCognitoIdentityProviderUpdateResourceServerRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateResourceServer service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateResourceServerResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateResourceServer:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateResourceServer:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the name and scopes of resource server. All other fields are read-only.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateResourceServerRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateResourceServerResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateResourceServer:(AWSCognitoIdentityProviderUpdateResourceServerRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateResourceServerResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateResourceServer service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateResourceServer:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to update a specific attribute (one at a time).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateUserAttributesResponse*&gt; *)updateUserAttributes:(AWSCognitoIdentityProviderUpdateUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateUserAttributes:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to update a specific attribute (one at a time).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateUserAttributes:(AWSCognitoIdentityProviderUpdateUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user pool with the specified attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateUserPoolResponse*&gt; *)updateUserPool:(AWSCognitoIdentityProviderUpdateUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateUserPoolResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorConcurrentModification, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorUserPoolTagging, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy.</Abstract></ReturnValue>
			<Anchor>//api/name/updateUserPool:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user pool with the specified attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateUserPool:(AWSCognitoIdentityProviderUpdateUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateUserPoolResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorConcurrentModification, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorUserPoolTagging, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateUserPool:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to update the specified user pool client and password policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateUserPoolClientResponse*&gt; *)updateUserPoolClient:(AWSCognitoIdentityProviderUpdateUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateUserPoolClientResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorConcurrentModification, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorScopeDoesNotExist, AWSCognitoIdentityProviderErrorInvalidOAuthFlow, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateUserPoolClient:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to update the specified user pool client and password policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateUserPoolClient:(AWSCognitoIdentityProviderUpdateUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateUserPoolClientResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorConcurrentModification, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorScopeDoesNotExist, AWSCognitoIdentityProviderErrorInvalidOAuthFlow, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/verifySoftwareToken:</TokenIdentifier>
			<Abstract type="html">VerifySoftwareToken</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifySoftwareTokenRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifySoftwareTokenResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderVerifySoftwareTokenResponse*&gt; *)verifySoftwareToken:(AWSCognitoIdentityProviderVerifySoftwareTokenRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifySoftwareToken service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderVerifySoftwareTokenResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorEnableSoftwareTokenMFA, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound, AWSCognitoIdentityProviderErrorCodeMismatch.</Abstract></ReturnValue>
			<Anchor>//api/name/verifySoftwareToken:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/verifySoftwareToken:completionHandler:</TokenIdentifier>
			<Abstract type="html">VerifySoftwareToken</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifySoftwareTokenRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifySoftwareTokenResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)verifySoftwareToken:(AWSCognitoIdentityProviderVerifySoftwareTokenRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderVerifySoftwareTokenResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifySoftwareToken service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorEnableSoftwareTokenMFA, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorSoftwareTokenMFANotFound, AWSCognitoIdentityProviderErrorCodeMismatch.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/verifySoftwareToken:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/verifyUserAttribute:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Verifies the specified user attributes in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderVerifyUserAttributeResponse*&gt; *)verifyUserAttribute:(AWSCognitoIdentityProviderVerifyUserAttributeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyUserAttribute service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderVerifyUserAttributeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/verifyUserAttribute:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/verifyUserAttribute:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Verifies the specified user attributes in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)verifyUserAttribute:(AWSCognitoIdentityProviderVerifyUserAttributeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderVerifyUserAttributeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyUserAttribute service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/verifyUserAttribute:completionHandler:</Anchor>
            <NodeRef refid="183"/>
		</Token>
		
        
        
	</File>
</Tokens>