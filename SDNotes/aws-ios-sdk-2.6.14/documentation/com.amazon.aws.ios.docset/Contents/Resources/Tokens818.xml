<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSKMSCreateKeyRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSKMSCreateKeyRequest</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
            
			
			<NodeRef refid="818"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/setBypassPolicyLockoutSafetyCheck:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A flag to indicate whether to bypass the key policy lockout safety check.&lt;/p&gt;&lt;important&gt;&lt;p&gt;Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately.&lt;/p&gt;&lt;p&gt;For more information, refer to the scenario in the Default Key Policy section in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;Use this parameter only when you include a policy in the request and you intend to prevent the principal that is making the request from making a subsequent &lt;a&gt;PutKeyPolicy&lt;/a&gt; request on the CMK.&lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *bypassPolicyLockoutSafetyCheck</Declaration>
			
			
			<Anchor>//api/name/bypassPolicyLockoutSafetyCheck</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/bypassPolicyLockoutSafetyCheck</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A flag to indicate whether to bypass the key policy lockout safety check.&lt;/p&gt;&lt;important&gt;&lt;p&gt;Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately.&lt;/p&gt;&lt;p&gt;For more information, refer to the scenario in the Default Key Policy section in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;Use this parameter only when you include a policy in the request and you intend to prevent the principal that is making the request from making a subsequent &lt;a&gt;PutKeyPolicy&lt;/a&gt; request on the CMK.&lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *bypassPolicyLockoutSafetyCheck</Declaration>
			
			
			<Anchor>//api/name/bypassPolicyLockoutSafetyCheck</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKMSCreateKeyRequest/bypassPolicyLockoutSafetyCheck</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A flag to indicate whether to bypass the key policy lockout safety check.&lt;/p&gt;&lt;important&gt;&lt;p&gt;Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately.&lt;/p&gt;&lt;p&gt;For more information, refer to the scenario in the Default Key Policy section in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;Use this parameter only when you include a policy in the request and you intend to prevent the principal that is making the request from making a subsequent &lt;a&gt;PutKeyPolicy&lt;/a&gt; request on the CMK.&lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *bypassPolicyLockoutSafetyCheck</Declaration>
			
			
			<Anchor>//api/name/bypassPolicyLockoutSafetyCheck</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/setDetail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A description of the CMK.&lt;/p&gt;&lt;p&gt;Use a description that helps you decide whether the CMK is appropriate for a task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/detail</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A description of the CMK.&lt;/p&gt;&lt;p&gt;Use a description that helps you decide whether the CMK is appropriate for a task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKMSCreateKeyRequest/detail</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A description of the CMK.&lt;/p&gt;&lt;p&gt;Use a description that helps you decide whether the CMK is appropriate for a task.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/setKeyUsage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The intended use of the CMK.&lt;/p&gt;&lt;p&gt;You can use CMKs only for symmetric encryption and decryption.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSKMSKeyUsageType keyUsage</Declaration>
			
			
			<Anchor>//api/name/keyUsage</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/keyUsage</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The intended use of the CMK.&lt;/p&gt;&lt;p&gt;You can use CMKs only for symmetric encryption and decryption.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSKMSKeyUsageType keyUsage</Declaration>
			
			
			<Anchor>//api/name/keyUsage</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKMSCreateKeyRequest/keyUsage</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The intended use of the CMK.&lt;/p&gt;&lt;p&gt;You can use CMKs only for symmetric encryption and decryption.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSKMSKeyUsageType keyUsage</Declaration>
			
			
			<Anchor>//api/name/keyUsage</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/setOrigin:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The source of the CMK&apos;s key material.&lt;/p&gt;&lt;p&gt;The default is &lt;code&gt;AWS_KMS&lt;/code&gt;, which means AWS KMS creates the key material. When this parameter is set to &lt;code&gt;EXTERNAL&lt;/code&gt;, the request creates a CMK without key material so that you can import key material from your existing key management infrastructure. For more information about importing key material into AWS KMS, see Importing Key Material in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The CMK&apos;s &lt;code&gt;Origin&lt;/code&gt; is immutable and is set when the CMK is created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSKMSOriginType origin</Declaration>
			
			
			<Anchor>//api/name/origin</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/origin</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The source of the CMK&apos;s key material.&lt;/p&gt;&lt;p&gt;The default is &lt;code&gt;AWS_KMS&lt;/code&gt;, which means AWS KMS creates the key material. When this parameter is set to &lt;code&gt;EXTERNAL&lt;/code&gt;, the request creates a CMK without key material so that you can import key material from your existing key management infrastructure. For more information about importing key material into AWS KMS, see Importing Key Material in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The CMK&apos;s &lt;code&gt;Origin&lt;/code&gt; is immutable and is set when the CMK is created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSKMSOriginType origin</Declaration>
			
			
			<Anchor>//api/name/origin</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKMSCreateKeyRequest/origin</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The source of the CMK&apos;s key material.&lt;/p&gt;&lt;p&gt;The default is &lt;code&gt;AWS_KMS&lt;/code&gt;, which means AWS KMS creates the key material. When this parameter is set to &lt;code&gt;EXTERNAL&lt;/code&gt;, the request creates a CMK without key material so that you can import key material from your existing key management infrastructure. For more information about importing key material into AWS KMS, see Importing Key Material in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The CMK&apos;s &lt;code&gt;Origin&lt;/code&gt; is immutable and is set when the CMK is created.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSKMSOriginType origin</Declaration>
			
			
			<Anchor>//api/name/origin</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/setPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The key policy to attach to the CMK.&lt;/p&gt;&lt;p&gt;If you specify a policy and do not set &lt;code&gt;BypassPolicyLockoutSafetyCheck&lt;/code&gt; to true, the policy must meet the following criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;It must allow the principal that is making the &lt;code&gt;CreateKey&lt;/code&gt; request to make a subsequent &lt;a&gt;PutKeyPolicy&lt;/a&gt; request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the Default Key Policy in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The policy size limit is 32 KiB (32768 bytes).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/policy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The key policy to attach to the CMK.&lt;/p&gt;&lt;p&gt;If you specify a policy and do not set &lt;code&gt;BypassPolicyLockoutSafetyCheck&lt;/code&gt; to true, the policy must meet the following criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;It must allow the principal that is making the &lt;code&gt;CreateKey&lt;/code&gt; request to make a subsequent &lt;a&gt;PutKeyPolicy&lt;/a&gt; request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the Default Key Policy in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The policy size limit is 32 KiB (32768 bytes).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKMSCreateKeyRequest/policy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The key policy to attach to the CMK.&lt;/p&gt;&lt;p&gt;If you specify a policy and do not set &lt;code&gt;BypassPolicyLockoutSafetyCheck&lt;/code&gt; to true, the policy must meet the following criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;It must allow the principal that is making the &lt;code&gt;CreateKey&lt;/code&gt; request to make a subsequent &lt;a&gt;PutKeyPolicy&lt;/a&gt; request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the Default Key Policy in the &lt;i&gt;AWS Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The policy size limit is 32 KiB (32768 bytes).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/setTags:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more tags. Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.&lt;/p&gt;&lt;p&gt;Use this parameter to tag the CMK when it is created. Alternately, you can omit this parameter and instead tag the CMK after it is created using &lt;a&gt;TagResource&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSKMSTag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKMSCreateKeyRequest/tags</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more tags. Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.&lt;/p&gt;&lt;p&gt;Use this parameter to tag the CMK when it is created. Alternately, you can omit this parameter and instead tag the CMK after it is created using &lt;a&gt;TagResource&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSKMSTag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKMSCreateKeyRequest/tags</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more tags. Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.&lt;/p&gt;&lt;p&gt;Use this parameter to tag the CMK when it is created. Alternately, you can omit this parameter and instead tag the CMK after it is created using &lt;a&gt;TagResource&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSKMSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSKMSTag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="818"/>
		</Token>
		
        
        
	</File>
</Tokens>