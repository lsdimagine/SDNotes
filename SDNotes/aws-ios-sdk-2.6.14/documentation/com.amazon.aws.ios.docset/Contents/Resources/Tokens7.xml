<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSAuthUIConfiguration.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSAuthUIConfiguration</TokenIdentifier>
			<Abstract type="html">The AWSAuthUIConfiguration class defines the configuration information
that can be customized on the SignIn screen</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/setCanCancel:</TokenIdentifier>
			<Abstract type="html">If set to YES user can hit cancel button to dismiss sign in UI
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL canCancel</Declaration>
			
			
			<Anchor>//api/name/canCancel</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/canCancel</TokenIdentifier>
			<Abstract type="html">If set to YES user can hit cancel button to dismiss sign in UI
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL canCancel</Declaration>
			
			
			<Anchor>//api/name/canCancel</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAuthUIConfiguration/canCancel</TokenIdentifier>
			<Abstract type="html">If set to YES user can hit cancel button to dismiss sign in UI
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL canCancel</Declaration>
			
			
			<Anchor>//api/name/canCancel</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/setLogoImage:</TokenIdentifier>
			<Abstract type="html">The logo to be used on the Auth UI Screen
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIImage *logoImage</Declaration>
			
			
			<Anchor>//api/name/logoImage</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/logoImage</TokenIdentifier>
			<Abstract type="html">The logo to be used on the Auth UI Screen
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIImage *logoImage</Declaration>
			
			
			<Anchor>//api/name/logoImage</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAuthUIConfiguration/logoImage</TokenIdentifier>
			<Abstract type="html">The logo to be used on the Auth UI Screen
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIImage *logoImage</Declaration>
			
			
			<Anchor>//api/name/logoImage</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/setBackgroundColor:</TokenIdentifier>
			<Abstract type="html">Gets the backgorund color of the sign in screen configured by the user
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/backgroundColor</TokenIdentifier>
			<Abstract type="html">Gets the backgorund color of the sign in screen configured by the user
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAuthUIConfiguration/backgroundColor</TokenIdentifier>
			<Abstract type="html">Gets the backgorund color of the sign in screen configured by the user
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/setEnableUserPoolsUI:</TokenIdentifier>
			<Abstract type="html">Enables the User Pools UI Flows for Sign In, Create Account and Forgot Password
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL enableUserPoolsUI</Declaration>
			
			
			<Anchor>//api/name/enableUserPoolsUI</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/enableUserPoolsUI</TokenIdentifier>
			<Abstract type="html">Enables the User Pools UI Flows for Sign In, Create Account and Forgot Password
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL enableUserPoolsUI</Declaration>
			
			
			<Anchor>//api/name/enableUserPoolsUI</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAuthUIConfiguration/enableUserPoolsUI</TokenIdentifier>
			<Abstract type="html">Enables the User Pools UI Flows for Sign In, Create Account and Forgot Password
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL enableUserPoolsUI</Declaration>
			
			
			<Anchor>//api/name/enableUserPoolsUI</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/setIsBackgroundColorFullScreen:</TokenIdentifier>
			<Abstract type="html">Gets the backgorund color of the sign in screen configured by the user for the whole screen.
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isBackgroundColorFullScreen</Declaration>
			
			
			<Anchor>//api/name/isBackgroundColorFullScreen</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/isBackgroundColorFullScreen</TokenIdentifier>
			<Abstract type="html">Gets the backgorund color of the sign in screen configured by the user for the whole screen.
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isBackgroundColorFullScreen</Declaration>
			
			
			<Anchor>//api/name/isBackgroundColorFullScreen</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAuthUIConfiguration/isBackgroundColorFullScreen</TokenIdentifier>
			<Abstract type="html">Gets the backgorund color of the sign in screen configured by the user for the whole screen.
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isBackgroundColorFullScreen</Declaration>
			
			
			<Anchor>//api/name/isBackgroundColorFullScreen</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/setFont:</TokenIdentifier>
			<Abstract type="html">Font for the text in the SignInView and all its subviews.
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIFont *font</Declaration>
			
			
			<Anchor>//api/name/font</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/font</TokenIdentifier>
			<Abstract type="html">Font for the text in the SignInView and all its subviews.
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIFont *font</Declaration>
			
			
			<Anchor>//api/name/font</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAuthUIConfiguration/font</TokenIdentifier>
			<Abstract type="html">Font for the text in the SignInView and all its subviews.
*</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, nullable) UIFont *font</Declaration>
			
			
			<Anchor>//api/name/font</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAuthUIConfiguration/addAWSSignInButtonViewClass:NS_SWIFT_NAME:</TokenIdentifier>
			<Abstract type="html">Registers the shared instance of sign in provider implementing AWSSignInProvider.</Abstract>
			<DeclaredIn>AWSAuthUIConfiguration.h</DeclaredIn>
			
			<Declaration>- (void)addAWSSignInButtonViewClass:(_Nonnull Class&lt;AWSSignInButtonView&gt;)signInButtonViewClass NS_SWIFT_NAME</Declaration>
			<Parameters>
				<Parameter>
					<Name>signInButtonViewClass</Name>
					<Abstract type="html">The SignInButtonView that conforms to the AWSSignInButtonView protocol.
*</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addAWSSignInButtonViewClass:NS_SWIFT_NAME:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
        
	</File>
</Tokens>