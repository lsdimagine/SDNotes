<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSMobileClient.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSMobileClient</TokenIdentifier>
			<Abstract type="html">AWSMobileClient helps you initialize the SDK, fetch the Cognito Identity
and resume any previously signed-in session. It also registers the SignIn
providers based on the information provided in awsconfiguration.json file.</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
            
			
			<NodeRef refid="1043"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSMobileClient/sharedInstance</TokenIdentifier>
			<Abstract type="html">Returns the AWSMobileClient singleton instance configured using the information provided in awsconfiguration.json or Info.plist file.</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="1043"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileClient/interceptApplication:openURL:sourceApplication:annotation:</TokenIdentifier>
			<Abstract type="html">Configure third-party services from application delegate with url, application
that called this provider, and any annotation info.</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
			
			<Declaration>- (BOOL)interceptApplication:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(nullable NSString *)sourceApplication annotation:(id)annotation</Declaration>
			<Parameters>
				<Parameter>
					<Name>application</Name>
					<Abstract type="html">instance from application delegate.</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">called from application delegate.</Abstract>
				</Parameter><Parameter>
					<Name>sourceApplication</Name>
					<Abstract type="html">that triggered this call.</Abstract>
				</Parameter><Parameter>
					<Name>annotation</Name>
					<Abstract type="html">from application delegate.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">true if call was handled by this component.

Swift

AWSMobileClient
    .sharedInstance()
    .interceptApplication(application, open: url, sourceApplication: sourceApplication, annotation: annotation)

Objective-C

AWSMobileClient *mobileClient = [AWSMobileClient sharedInstance];
[mobileClient interceptApplication:application
                            openURL:url
                  sourceApplication:srcApplication
                         annotation:annotation];</Abstract></ReturnValue>
			<Anchor>//api/name/interceptApplication:openURL:sourceApplication:annotation:</Anchor>
            <NodeRef refid="1043"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileClient/interceptApplication:didFinishLaunchingWithOptions:</TokenIdentifier>
			<Abstract type="html">Configures the different AWSMobile SDK Clientsfrom application delegate with options.</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
			
			<Declaration>- (BOOL)interceptApplication:(UIApplication *)application didFinishLaunchingWithOptions:(nullable NSDictionary *)launchOptions</Declaration>
			<Parameters>
				<Parameter>
					<Name>application</Name>
					<Abstract type="html">instance from application delegate.</Abstract>
				</Parameter><Parameter>
					<Name>launchOptions</Name>
					<Abstract type="html">from application delegate.

Swift

AWSMobileClient
    .sharedInstance()
    .interceptApplication(application, didFinishLaunchingWithOptions:launchOptions)

Objective-C

AWSMobileClient *mobileClient = [AWSMobileClient sharedInstance];
[mobileClient interceptApplication:application
      didFinishLaunchingWithOptions:launchOptions];</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/interceptApplication:didFinishLaunchingWithOptions:</Anchor>
            <NodeRef refid="1043"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileClient/interceptApplication:didFinishLaunchingWithOptions:resumeSessionWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">Configures the different AWSMobile SDK Clientsfrom application delegate with options.</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
			
			<Declaration>- (BOOL)interceptApplication:(UIApplication *)application didFinishLaunchingWithOptions:(nullable NSDictionary *)launchOptions resumeSessionWithCompletionHandler:(void ( ^ ) ( id result , NSError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>application</Name>
					<Abstract type="html">instance from application delegate.</Abstract>
				</Parameter><Parameter>
					<Name>launchOptions</Name>
					<Abstract type="html">from application delegate.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">completion handler for resuming auth session.

Swift

AWSMobileClient
    .sharedInstance()
    .interceptApplication(application,
        didFinishLaunchingWithOptions:launchOptions,
        resumeSessionWithCompletionHandler:completionHandler)

Objective-C

AWSMobileClient *mobileClient = [AWSMobileClient sharedInstance];
[mobileClient interceptApplication:application
      didFinishLaunchingWithOptions:launchOptions
resumeSessionWithCompletionHandler:completionHandler];</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/interceptApplication:didFinishLaunchingWithOptions:resumeSessionWithCompletionHandler:</Anchor>
            <NodeRef refid="1043"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileClient/setSignInProviders:</TokenIdentifier>
			<Abstract type="html">Set the signInProviderConfig</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
			
			<Declaration>- (void)setSignInProviders:(nullable NSArray&lt;AWSSignInProviderConfig*&gt; *)signInProviderConfig</Declaration>
			<Parameters>
				<Parameter>
					<Name>signInProviderConfig</Name>
					<Abstract type="html">the signInProviderConfiguration with permissions.
*</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setSignInProviders:</Anchor>
            <NodeRef refid="1043"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileClient/getCredentialsProvider</TokenIdentifier>
			<Abstract type="html">Retrieve the Credentials Provider.</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
			
			<Declaration>- (AWSCognitoCredentialsProvider *)getCredentialsProvider</Declaration>
			
			<ReturnValue><Abstract type="html">AWSCognitoCredentialsProvider</Abstract></ReturnValue>
			<Anchor>//api/name/getCredentialsProvider</Anchor>
            <NodeRef refid="1043"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileClient/setCredentialsProvider:</TokenIdentifier>
			<Abstract type="html">Set the CredentialsProvider supplied by the user.</Abstract>
			<DeclaredIn>AWSMobileClient.h</DeclaredIn>
			
			<Declaration>- (void)setCredentialsProvider:(AWSCognitoCredentialsProvider *)credentialsProvider</Declaration>
			<Parameters>
				<Parameter>
					<Name>credentialsProvider</Name>
					<Abstract type="html">The CredentialsProvider supplied by the user</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCredentialsProvider:</Anchor>
            <NodeRef refid="1043"/>
		</Token>
		
        
        
	</File>
</Tokens>