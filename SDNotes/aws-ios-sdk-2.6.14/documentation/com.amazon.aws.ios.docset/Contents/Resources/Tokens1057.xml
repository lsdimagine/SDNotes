<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSPinpointNotificationManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSPinpointNotificationManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSPinpointNotificationManager.h</DeclaredIn>
            
			
			<NodeRef refid="1057"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSPinpointNotificationManager/isNotificationEnabled</TokenIdentifier>
			<Abstract type="html">Returns a Boolean indicating whether the app is currently registered for remote notifications.</Abstract>
			<DeclaredIn>AWSPinpointNotificationManager.h</DeclaredIn>
			
			<Declaration>+ (BOOL)isNotificationEnabled</Declaration>
			
			<ReturnValue><Abstract type="html">BOOL YES if the app is registered for remote notifications and received its device token or NO if registration has not occurred, has failed, or has been denied by the user.</Abstract></ReturnValue>
			<Anchor>//api/name/isNotificationEnabled</Anchor>
            <NodeRef refid="1057"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointNotificationManager/interceptDidFinishLaunchingWithOptions:</TokenIdentifier>
			<Abstract type="html">Intercepts the - application:didFinishLaunchingWithOptions: application delegate.</Abstract>
			<DeclaredIn>AWSPinpointNotificationManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)interceptDidFinishLaunchingWithOptions:(nullable NSDictionary *)launchOptions</Declaration>
			<Parameters>
				<Parameter>
					<Name>launchOptions</Name>
					<Abstract type="html">A dictionary indicating the reason the app was launched (if any). The contents of this dictionary may be empty in situations where the user launched the app directly. For information about the possible keys in this dictionary and how to handle them.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/interceptDidFinishLaunchingWithOptions:</Anchor>
            <NodeRef refid="1057"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointNotificationManager/interceptDidRegisterForRemoteNotificationsWithDeviceToken:</TokenIdentifier>
			<Abstract type="html">Intercepts the - application:didRegisterForRemoteNotificationsWithDeviceToken: application delegate.</Abstract>
			<DeclaredIn>AWSPinpointNotificationManager.h</DeclaredIn>
			
			<Declaration>- (void)interceptDidRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken</Declaration>
			<Parameters>
				<Parameter>
					<Name>deviceToken</Name>
					<Abstract type="html">A token that identifies the device to APNs.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/interceptDidRegisterForRemoteNotificationsWithDeviceToken:</Anchor>
            <NodeRef refid="1057"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointNotificationManager/interceptDidReceiveRemoteNotification:fetchCompletionHandler:</TokenIdentifier>
			<Abstract type="html">Intercepts the - application:didReceiveRemoteNotification:fetchCompletionHandler: application delegate.</Abstract>
			<DeclaredIn>AWSPinpointNotificationManager.h</DeclaredIn>
			
			<Declaration>- (void)interceptDidReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void ( ^ ) ( UIBackgroundFetchResult result ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>userInfo</Name>
					<Abstract type="html">A dictionary that contains information related to the remote notification, potentially including a badge number for the app icon, an alert sound, an alert message to display to the user, a notification identifier, and custom data. The provider originates it as a JSON-defined dictionary that iOS converts to an NSDictionary object; the dictionary may contain only property-list objects plus NSNull.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The block to execute when the download operation is complete. When calling this block, pass in the fetch result value that best describes the results of your download operation. You must call this handler and should do so as soon as possible. For a list of possible values, see the UIBackgroundFetchResult type.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/interceptDidReceiveRemoteNotification:fetchCompletionHandler:</Anchor>
            <NodeRef refid="1057"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointNotificationManager/interceptDidReceiveRemoteNotification:fetchCompletionHandler:shouldHandleNotificationDeepLink:</TokenIdentifier>
			<Abstract type="html">Intercepts the - application:didReceiveRemoteNotification:fetchCompletionHandler:shouldHandleNotificationDeepLink: application delegate.</Abstract>
			<DeclaredIn>AWSPinpointNotificationManager.h</DeclaredIn>
			
			<Declaration>- (void)interceptDidReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void ( ^ ) ( UIBackgroundFetchResult result ))handler shouldHandleNotificationDeepLink:(BOOL)handleDeepLink</Declaration>
			<Parameters>
				<Parameter>
					<Name>userInfo</Name>
					<Abstract type="html">A dictionary that contains information related to the remote notification, potentially including a badge number for the app icon, an alert sound, an alert message to display to the user, a notification identifier, and custom data. The provider originates it as a JSON-defined dictionary that iOS converts to an NSDictionary object; the dictionary may contain only property-list objects plus NSNull.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The block to execute when the download operation is complete. When calling this block, pass in the fetch result value that best describes the results of your download operation. You must call this handler and should do so as soon as possible. For a list of possible values, see the UIBackgroundFetchResult type.</Abstract>
				</Parameter><Parameter>
					<Name>handleDeepLink</Name>
					<Abstract type="html">Whether or not notification manager should attempt to open the remote notification deeplink, if present</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/interceptDidReceiveRemoteNotification:fetchCompletionHandler:shouldHandleNotificationDeepLink:</Anchor>
            <NodeRef refid="1057"/>
		</Token>
		
        
        
	</File>
</Tokens>