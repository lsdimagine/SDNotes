<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSPinpointAnalyticsClient.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSPinpointAnalyticsClient</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
            
			
			<NodeRef refid="1047"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/setEventRecorder:</TokenIdentifier>
			<Abstract type="html">Returns the AWSPinpointEventRecorder which is the low level client used to record events to local storage.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) AWSPinpointEventRecorder *eventRecorder</Declaration>
			
			<ReturnValue><Abstract type="html">the AWSPinpointEventRecorder used for storing events.</Abstract></ReturnValue>
			<Anchor>//api/name/eventRecorder</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/eventRecorder</TokenIdentifier>
			<Abstract type="html">Returns the AWSPinpointEventRecorder which is the low level client used to record events to local storage.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) AWSPinpointEventRecorder *eventRecorder</Declaration>
			
			<ReturnValue><Abstract type="html">the AWSPinpointEventRecorder used for storing events.</Abstract></ReturnValue>
			<Anchor>//api/name/eventRecorder</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointAnalyticsClient/eventRecorder</TokenIdentifier>
			<Abstract type="html">Returns the AWSPinpointEventRecorder which is the low level client used to record events to local storage.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) AWSPinpointEventRecorder *eventRecorder</Declaration>
			
			<ReturnValue><Abstract type="html">the AWSPinpointEventRecorder used for storing events.</Abstract></ReturnValue>
			<Anchor>//api/name/eventRecorder</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/addGlobalAttribute:forKey:</TokenIdentifier>
			<Abstract type="html">Adds the specified attribute to all subsequent recorded events.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)addGlobalAttribute:(NSString *)theValue forKey:(NSString *)theKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>theValue</Name>
					<Abstract type="html">the value of the attribute.</Abstract>
				</Parameter><Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the name of the attribute to add.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addGlobalAttribute:forKey:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/addGlobalAttribute:forKey:forEventType:</TokenIdentifier>
			<Abstract type="html">Adds the specified attribute to all subsequent recorded events with the specified event type.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)addGlobalAttribute:(NSString *)theValue forKey:(NSString *)theKey forEventType:(NSString *)theEventType</Declaration>
			<Parameters>
				<Parameter>
					<Name>theValue</Name>
					<Abstract type="html">the value of the attribute.</Abstract>
				</Parameter><Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the name of the attribute to add.</Abstract>
				</Parameter><Parameter>
					<Name>theEventType</Name>
					<Abstract type="html">the type of events to add the attribute to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addGlobalAttribute:forKey:forEventType:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/addGlobalMetric:forKey:</TokenIdentifier>
			<Abstract type="html">Adds the specified metric to all subsequent recorded events.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)addGlobalMetric:(NSNumber *)theValue forKey:(NSString *)theKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>theValue</Name>
					<Abstract type="html">the value of the metric</Abstract>
				</Parameter><Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the name of the metric to add</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addGlobalMetric:forKey:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/addGlobalMetric:forKey:forEventType:</TokenIdentifier>
			<Abstract type="html">Adds the specified metric to all subsequent recorded events with the specified event type.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)addGlobalMetric:(NSNumber *)theValue forKey:(NSString *)theKey forEventType:(NSString *)theEventType</Declaration>
			<Parameters>
				<Parameter>
					<Name>theValue</Name>
					<Abstract type="html">the value of the metric</Abstract>
				</Parameter><Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the name of the metric to add</Abstract>
				</Parameter><Parameter>
					<Name>theEventType</Name>
					<Abstract type="html">the type of events to add the metric to</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addGlobalMetric:forKey:forEventType:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/removeGlobalAttributeForKey:</TokenIdentifier>
			<Abstract type="html">Removes the specified attribute. All subsequent recorded events will no longer have this global attribute.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)removeGlobalAttributeForKey:(NSString *)theKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the key of the attribute to remove</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeGlobalAttributeForKey:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/removeGlobalAttributeForKey:forEventType:</TokenIdentifier>
			<Abstract type="html">Removes the specified attribute. All subsequent recorded events with the specified event type will no longer have this global attribute.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)removeGlobalAttributeForKey:(NSString *)theKey forEventType:(NSString *)theEventType</Declaration>
			<Parameters>
				<Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the key of the attribute to remove</Abstract>
				</Parameter><Parameter>
					<Name>theEventType</Name>
					<Abstract type="html">the type of events to remove the attribute from</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeGlobalAttributeForKey:forEventType:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/removeGlobalMetricForKey:</TokenIdentifier>
			<Abstract type="html">Removes the specified metric. All subsequent recorded events will no longer have this global metric.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)removeGlobalMetricForKey:(NSString *)theKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the key of the metric to remove</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeGlobalMetricForKey:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/removeGlobalMetricForKey:forEventType:</TokenIdentifier>
			<Abstract type="html">Removes the specified metric. All subsequent recorded events with the specified event type will no longer have this global metric.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (void)removeGlobalMetricForKey:(NSString *)theKey forEventType:(NSString *)theEventType</Declaration>
			<Parameters>
				<Parameter>
					<Name>theKey</Name>
					<Abstract type="html">the key of the metric to remove</Abstract>
				</Parameter><Parameter>
					<Name>theEventType</Name>
					<Abstract type="html">the type of events to remove the metric from</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeGlobalMetricForKey:forEventType:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/recordEvent:</TokenIdentifier>
			<Abstract type="html">Records the specified AWSPinpointEvent to the local filestore.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)recordEvent:(AWSPinpointEvent *)theEvent</Declaration>
			<Parameters>
				<Parameter>
					<Name>theEvent</Name>
					<Abstract type="html">The AWSPinpointEvent to persist</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">AWSTask - task.result is always nil.</Abstract></ReturnValue>
			<Anchor>//api/name/recordEvent:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/createEventWithEventType:</TokenIdentifier>
			<Abstract type="html">Create an AWSPinpointEvent with the specified theEventType</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (AWSPinpointEvent *)createEventWithEventType:(NSString *)theEventType</Declaration>
			<Parameters>
				<Parameter>
					<Name>theEventType</Name>
					<Abstract type="html">the type of event to create</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an AWSPinpointEvent with the specified event type</Abstract></ReturnValue>
			<Anchor>//api/name/createEventWithEventType:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/createAppleMonetizationEventWithTransaction:withProduct:</TokenIdentifier>
			<Abstract type="html">Create an Apple monetization AWSPinpointEvent of type &quot;_monetization.purchase&quot; with the specified parameters.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (AWSPinpointEvent *)createAppleMonetizationEventWithTransaction:(SKPaymentTransaction *)transaction withProduct:(SKProduct *)product</Declaration>
			<Parameters>
				<Parameter>
					<Name>transaction</Name>
					<Abstract type="html">A SKPaymentTransaction object returned from an IAP</Abstract>
				</Parameter><Parameter>
					<Name>product</Name>
					<Abstract type="html">A SKProduct object of the an IAP</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an AWSPinpointEvent with the specified event type</Abstract></ReturnValue>
			<Anchor>//api/name/createAppleMonetizationEventWithTransaction:withProduct:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/createVirtualMonetizationEventWithProductId:withItemPrice:withQuantity:withCurrency:</TokenIdentifier>
			<Abstract type="html">Create a Virtual monetization AWSPinpointEvent of type &quot;_monetization.purchase&quot; with the specified parameters.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (AWSPinpointEvent *)createVirtualMonetizationEventWithProductId:(NSString *)theProductId withItemPrice:(double)theItemPrice withQuantity:(NSInteger)theQuantity withCurrency:(NSString *)theCurrency</Declaration>
			<Parameters>
				<Parameter>
					<Name>theProductId</Name>
					<Abstract type="html">A product identifier for your virtual monitization event</Abstract>
				</Parameter><Parameter>
					<Name>theItemPrice</Name>
					<Abstract type="html">An item price for your virtual monitization event</Abstract>
				</Parameter><Parameter>
					<Name>theQuantity</Name>
					<Abstract type="html">A quantity of how many products sold for your virtual monitization event</Abstract>
				</Parameter><Parameter>
					<Name>theCurrency</Name>
					<Abstract type="html">The currency for your virtual monitization event</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an AWSPinpointEvent with the specified event type</Abstract></ReturnValue>
			<Anchor>//api/name/createVirtualMonetizationEventWithProductId:withItemPrice:withQuantity:withCurrency:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/submitEvents</TokenIdentifier>
			<Abstract type="html">Submits all recorded events to Pinpoint.
Events are automatically submitted when the application goes into the background.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)submitEvents</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains successful submitted events.</Abstract></ReturnValue>
			<Anchor>//api/name/submitEvents</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointAnalyticsClient/submitEventsWithCompletionBlock:</TokenIdentifier>
			<Abstract type="html">Submits all recorded events to Pinpoint.
Events are automatically submitted when the application goes into the background.</Abstract>
			<DeclaredIn>AWSPinpointAnalyticsClient.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)submitEventsWithCompletionBlock:(AWSPinpointCompletionBlock)completionBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>completionBlock</Name>
					<Abstract type="html">The block to be executed after submission has completed.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">AWSTask - task.result is always nil.</Abstract></ReturnValue>
			<Anchor>//api/name/submitEventsWithCompletionBlock:</Anchor>
            <NodeRef refid="1047"/>
		</Token>
		
        
        
	</File>
</Tokens>