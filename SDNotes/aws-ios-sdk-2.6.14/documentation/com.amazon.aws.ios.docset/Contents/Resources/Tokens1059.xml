<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSPinpointSessionClient.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSPinpointSessionClient</TokenIdentifier>
			<Abstract type="html">The session client records analytics session events.</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
            
			
			<NodeRef refid="1059"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointSessionClient/setSession:</TokenIdentifier>
			<Abstract type="html">The current session object.</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) AWSPinpointSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
            <NodeRef refid="1059"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointSessionClient/session</TokenIdentifier>
			<Abstract type="html">The current session object.</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) AWSPinpointSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
            <NodeRef refid="1059"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointSessionClient/session</TokenIdentifier>
			<Abstract type="html">The current session object.</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) AWSPinpointSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
            <NodeRef refid="1059"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointSessionClient/startSession</TokenIdentifier>
			<Abstract type="html">Starts the session by recording an event of type &quot;_session.start&quot;
If a session is currently active then that session is stopped and a new session started.</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)startSession</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains the start event.</Abstract></ReturnValue>
			<Anchor>//api/name/startSession</Anchor>
            <NodeRef refid="1059"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointSessionClient/stopSession</TokenIdentifier>
			<Abstract type="html">Stops the session by recording an event of type &quot;_session.stop&quot;</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)stopSession</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains the stop event.</Abstract></ReturnValue>
			<Anchor>//api/name/stopSession</Anchor>
            <NodeRef refid="1059"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointSessionClient/pauseSessionWithTimeoutEnabled:timeoutCompletionBlock:</TokenIdentifier>
			<Abstract type="html">Pauses the session by recording an event of type &quot;_session.pause&quot;</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)pauseSessionWithTimeoutEnabled:(BOOL)timeoutEnabled timeoutCompletionBlock:(nullable AWSPinpointTimeoutBlock)timeoutCompletionBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>timeoutEnabled</Name>
					<Abstract type="html">If this is enabled then the session will timeout after 5 seconds and a session stop will be recorded. (Session timeout if configurable in AWSPinpointConfiguration)</Abstract>
				</Parameter><Parameter>
					<Name>timeoutCompletionBlock</Name>
					<Abstract type="html">The block that will be executed after timeout has completed and submission of events has occurred, task.result will contain events that were submitted.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">AWSTask - task.result contains the pause event.</Abstract></ReturnValue>
			<Anchor>//api/name/pauseSessionWithTimeoutEnabled:timeoutCompletionBlock:</Anchor>
            <NodeRef refid="1059"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointSessionClient/resumeSession</TokenIdentifier>
			<Abstract type="html">Resumes the session by recording an event of type &quot;_session.resume&quot;
If no session is active then a new session is started.
If the timeout of 5 seconds has passed, then the current session is stopped and a new session started. (Session timeout if configurable in AWSPinpointConfiguration)</Abstract>
			<DeclaredIn>AWSPinpointSessionClient.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)resumeSession</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains the resume event.</Abstract></ReturnValue>
			<Anchor>//api/name/resumeSession</Anchor>
            <NodeRef refid="1059"/>
		</Token>
		
        
        
	</File>
</Tokens>