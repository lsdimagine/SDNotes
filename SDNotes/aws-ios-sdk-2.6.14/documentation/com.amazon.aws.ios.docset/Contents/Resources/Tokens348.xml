<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSCognitoIdentityProviderListUsersRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the request to list users.&lt;/p&gt;
Required parameters: [UserPoolId]</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
            
			
			<NodeRef refid="348"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/setAttributesToGet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An array of strings, where each string is the name of a user attribute to be returned for each user in the search results. If the array is null, all attributes are returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An array of strings, where each string is the name of a user attribute to be returned for each user in the search results. If the array is null, all attributes are returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderListUsersRequest/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An array of strings, where each string is the name of a user attribute to be returned for each user in the search results. If the array is null, all attributes are returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/setFilter:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A filter string of the form &quot;&lt;i&gt;AttributeName&lt;/i&gt;&lt;i&gt;Filter-Type&lt;/i&gt; &quot;&lt;i&gt;AttributeValue&lt;/i&gt;&quot;&quot;. Quotation marks within the filter string must be escaped using the backslash (\) character. For example, &quot;&lt;code&gt;familyname&lt;/code&gt; = \&quot;Reddy\&quot;&quot;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeName&lt;/i&gt;: The name of the attribute to search for. You can only search for one attribute at a time.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;Filter-Type&lt;/i&gt;: For an exact match, use =, for example, &quot;&lt;code&gt;givenname&lt;/code&gt; = \&quot;Jon\&quot;&quot;. For a prefix (&quot;starts with&quot;) match, use ^=, for example, &quot;&lt;code&gt;givenname&lt;/code&gt; ^= \&quot;Jon\&quot;&quot;. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeValue&lt;/i&gt;: The attribute value that must be matched for each user.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the filter string is empty, &lt;code&gt;ListUsers&lt;/code&gt; returns all users in the user pool.&lt;/p&gt;&lt;p&gt;You can only search for the following standard attributes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;username&lt;/code&gt; (case-sensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;email&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;phonenumber&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;givenname&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;familyname&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;preferredusername&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;cognito:userstatus&lt;/code&gt; (called &lt;b&gt;Enabled&lt;/b&gt; in the Console) (case-sensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;status&lt;/code&gt; (case-insensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Custom attributes are not searchable.&lt;/p&gt;&lt;p&gt;For more information, see Examples of Using the ListUsers API in the &lt;i&gt;Amazon Cognito Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *filter</Declaration>
			
			
			<Anchor>//api/name/filter</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/filter</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A filter string of the form &quot;&lt;i&gt;AttributeName&lt;/i&gt;&lt;i&gt;Filter-Type&lt;/i&gt; &quot;&lt;i&gt;AttributeValue&lt;/i&gt;&quot;&quot;. Quotation marks within the filter string must be escaped using the backslash (\) character. For example, &quot;&lt;code&gt;familyname&lt;/code&gt; = \&quot;Reddy\&quot;&quot;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeName&lt;/i&gt;: The name of the attribute to search for. You can only search for one attribute at a time.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;Filter-Type&lt;/i&gt;: For an exact match, use =, for example, &quot;&lt;code&gt;givenname&lt;/code&gt; = \&quot;Jon\&quot;&quot;. For a prefix (&quot;starts with&quot;) match, use ^=, for example, &quot;&lt;code&gt;givenname&lt;/code&gt; ^= \&quot;Jon\&quot;&quot;. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeValue&lt;/i&gt;: The attribute value that must be matched for each user.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the filter string is empty, &lt;code&gt;ListUsers&lt;/code&gt; returns all users in the user pool.&lt;/p&gt;&lt;p&gt;You can only search for the following standard attributes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;username&lt;/code&gt; (case-sensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;email&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;phonenumber&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;givenname&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;familyname&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;preferredusername&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;cognito:userstatus&lt;/code&gt; (called &lt;b&gt;Enabled&lt;/b&gt; in the Console) (case-sensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;status&lt;/code&gt; (case-insensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Custom attributes are not searchable.&lt;/p&gt;&lt;p&gt;For more information, see Examples of Using the ListUsers API in the &lt;i&gt;Amazon Cognito Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *filter</Declaration>
			
			
			<Anchor>//api/name/filter</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderListUsersRequest/filter</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A filter string of the form &quot;&lt;i&gt;AttributeName&lt;/i&gt;&lt;i&gt;Filter-Type&lt;/i&gt; &quot;&lt;i&gt;AttributeValue&lt;/i&gt;&quot;&quot;. Quotation marks within the filter string must be escaped using the backslash (\) character. For example, &quot;&lt;code&gt;familyname&lt;/code&gt; = \&quot;Reddy\&quot;&quot;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeName&lt;/i&gt;: The name of the attribute to search for. You can only search for one attribute at a time.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;Filter-Type&lt;/i&gt;: For an exact match, use =, for example, &quot;&lt;code&gt;givenname&lt;/code&gt; = \&quot;Jon\&quot;&quot;. For a prefix (&quot;starts with&quot;) match, use ^=, for example, &quot;&lt;code&gt;givenname&lt;/code&gt; ^= \&quot;Jon\&quot;&quot;. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeValue&lt;/i&gt;: The attribute value that must be matched for each user.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the filter string is empty, &lt;code&gt;ListUsers&lt;/code&gt; returns all users in the user pool.&lt;/p&gt;&lt;p&gt;You can only search for the following standard attributes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;username&lt;/code&gt; (case-sensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;email&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;phonenumber&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;givenname&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;familyname&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;preferredusername&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;cognito:userstatus&lt;/code&gt; (called &lt;b&gt;Enabled&lt;/b&gt; in the Console) (case-sensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;status&lt;/code&gt; (case-insensitive)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Custom attributes are not searchable.&lt;/p&gt;&lt;p&gt;For more information, see Examples of Using the ListUsers API in the &lt;i&gt;Amazon Cognito Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *filter</Declaration>
			
			
			<Anchor>//api/name/filter</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/setLimit:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Maximum number of users to be returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *limit</Declaration>
			
			
			<Anchor>//api/name/limit</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/limit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Maximum number of users to be returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *limit</Declaration>
			
			
			<Anchor>//api/name/limit</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderListUsersRequest/limit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Maximum number of users to be returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *limit</Declaration>
			
			
			<Anchor>//api/name/limit</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/setPaginationToken:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *paginationToken</Declaration>
			
			
			<Anchor>//api/name/paginationToken</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/paginationToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *paginationToken</Declaration>
			
			
			<Anchor>//api/name/paginationToken</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderListUsersRequest/paginationToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *paginationToken</Declaration>
			
			
			<Anchor>//api/name/paginationToken</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/setUserPoolId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The user pool ID for the user pool on which the search should be performed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPoolId</Declaration>
			
			
			<Anchor>//api/name/userPoolId</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProviderListUsersRequest/userPoolId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The user pool ID for the user pool on which the search should be performed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPoolId</Declaration>
			
			
			<Anchor>//api/name/userPoolId</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProviderListUsersRequest/userPoolId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The user pool ID for the user pool on which the search should be performed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPoolId</Declaration>
			
			
			<Anchor>//api/name/userPoolId</Anchor>
            <NodeRef refid="348"/>
		</Token>
		
        
        
	</File>
</Tokens>