<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSPinpointEventRecorder.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSPinpointEventRecorder</TokenIdentifier>
			<Abstract type="html">AWSPinpointEventRecorder stores events to a local sql lite databse and submits them to Pinpoint.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
            
			
			<NodeRef refid="1056"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/setDiskBytesUsed:</TokenIdentifier>
			<Abstract type="html">The number of bytes currently used to store AWSPinpointEvent objects on disk.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) uint64_t diskBytesUsed</Declaration>
			
			
			<Anchor>//api/name/diskBytesUsed</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/diskBytesUsed</TokenIdentifier>
			<Abstract type="html">The number of bytes currently used to store AWSPinpointEvent objects on disk.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) uint64_t diskBytesUsed</Declaration>
			
			
			<Anchor>//api/name/diskBytesUsed</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointEventRecorder/diskBytesUsed</TokenIdentifier>
			<Abstract type="html">The number of bytes currently used to store AWSPinpointEvent objects on disk.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) uint64_t diskBytesUsed</Declaration>
			
			
			<Anchor>//api/name/diskBytesUsed</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/setNotificationByteThreshold:</TokenIdentifier>
			<Abstract type="html">The threshold of disk bytes for notification. When exceeded, saveEvent: posts AWSPinpointEventByteThresholdReachedNotification. The default is 0 meaning it will not post the notification.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger notificationByteThreshold</Declaration>
			
			
			<Anchor>//api/name/notificationByteThreshold</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/notificationByteThreshold</TokenIdentifier>
			<Abstract type="html">The threshold of disk bytes for notification. When exceeded, saveEvent: posts AWSPinpointEventByteThresholdReachedNotification. The default is 0 meaning it will not post the notification.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger notificationByteThreshold</Declaration>
			
			
			<Anchor>//api/name/notificationByteThreshold</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointEventRecorder/notificationByteThreshold</TokenIdentifier>
			<Abstract type="html">The threshold of disk bytes for notification. When exceeded, saveEvent: posts AWSPinpointEventByteThresholdReachedNotification. The default is 0 meaning it will not post the notification.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger notificationByteThreshold</Declaration>
			
			
			<Anchor>//api/name/notificationByteThreshold</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/setDiskByteLimit:</TokenIdentifier>
			<Abstract type="html">The limit of the disk cache size in bytes. When exceeded, older requests will be discarded. Setting this value to 0.0 meaning no practical limit. The default value is 5MB.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger diskByteLimit</Declaration>
			
			
			<Anchor>//api/name/diskByteLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/diskByteLimit</TokenIdentifier>
			<Abstract type="html">The limit of the disk cache size in bytes. When exceeded, older requests will be discarded. Setting this value to 0.0 meaning no practical limit. The default value is 5MB.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger diskByteLimit</Declaration>
			
			
			<Anchor>//api/name/diskByteLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointEventRecorder/diskByteLimit</TokenIdentifier>
			<Abstract type="html">The limit of the disk cache size in bytes. When exceeded, older requests will be discarded. Setting this value to 0.0 meaning no practical limit. The default value is 5MB.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger diskByteLimit</Declaration>
			
			
			<Anchor>//api/name/diskByteLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/setDiskAgeLimit:</TokenIdentifier>
			<Abstract type="html">The age limit of the cached requests. When exceeded, requests older than the specified age will be discarded. Setting this value to 0 meaning no practical limit. The default is no age limit.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval diskAgeLimit</Declaration>
			
			
			<Anchor>//api/name/diskAgeLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/diskAgeLimit</TokenIdentifier>
			<Abstract type="html">The age limit of the cached requests. When exceeded, requests older than the specified age will be discarded. Setting this value to 0 meaning no practical limit. The default is no age limit.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval diskAgeLimit</Declaration>
			
			
			<Anchor>//api/name/diskAgeLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointEventRecorder/diskAgeLimit</TokenIdentifier>
			<Abstract type="html">The age limit of the cached requests. When exceeded, requests older than the specified age will be discarded. Setting this value to 0 meaning no practical limit. The default is no age limit.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval diskAgeLimit</Declaration>
			
			
			<Anchor>//api/name/diskAgeLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/setSubmissionInProgress:</TokenIdentifier>
			<Abstract type="html">Indicates if submission of events is in progress, only one submission of events is allowed at a time.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL submissionInProgress</Declaration>
			
			
			<Anchor>//api/name/submissionInProgress</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/submissionInProgress</TokenIdentifier>
			<Abstract type="html">Indicates if submission of events is in progress, only one submission of events is allowed at a time.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL submissionInProgress</Declaration>
			
			
			<Anchor>//api/name/submissionInProgress</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointEventRecorder/submissionInProgress</TokenIdentifier>
			<Abstract type="html">Indicates if submission of events is in progress, only one submission of events is allowed at a time.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL submissionInProgress</Declaration>
			
			
			<Anchor>//api/name/submissionInProgress</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/setBatchRecordsByteLimit:</TokenIdentifier>
			<Abstract type="html">The maxium batch data size in bytes. The default value is 512KB. The maximum is 4MB.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger batchRecordsByteLimit</Declaration>
			
			
			<Anchor>//api/name/batchRecordsByteLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/batchRecordsByteLimit</TokenIdentifier>
			<Abstract type="html">The maxium batch data size in bytes. The default value is 512KB. The maximum is 4MB.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger batchRecordsByteLimit</Declaration>
			
			
			<Anchor>//api/name/batchRecordsByteLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSPinpointEventRecorder/batchRecordsByteLimit</TokenIdentifier>
			<Abstract type="html">The maxium batch data size in bytes. The default value is 512KB. The maximum is 4MB.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger batchRecordsByteLimit</Declaration>
			
			
			<Anchor>//api/name/batchRecordsByteLimit</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/saveEvent:</TokenIdentifier>
			<Abstract type="html">Saves an event to local storage to be sent later.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;AWSPinpointEvent*&gt; *)saveEvent:(AWSPinpointEvent *)event</Declaration>
			<Parameters>
				<Parameter>
					<Name>event</Name>
					<Abstract type="html">The event to send to Amazon Pinpoint.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">AWSTask - task.result contains the saved event.</Abstract></ReturnValue>
			<Anchor>//api/name/saveEvent:</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/getEvents</TokenIdentifier>
			<Abstract type="html">Retrieves events in local storage with a limit of 128 events.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;AWSPinpointEvent*&gt; *&gt; *)getEvents</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains an array of AWSPinpointEvent objects.</Abstract></ReturnValue>
			<Anchor>//api/name/getEvents</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/getEventsWithLimit:</TokenIdentifier>
			<Abstract type="html">Retrieves events in local storage with the specified limit.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;AWSPinpointEvent*&gt; *&gt; *)getEventsWithLimit:(NSNumber *)limit</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains an array of AWSPinpointEvent objects.</Abstract></ReturnValue>
			<Anchor>//api/name/getEventsWithLimit:</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/getDirtyEvents</TokenIdentifier>
			<Abstract type="html">Retrieves dirty events in local storage with a limit of 128 events.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;AWSPinpointEvent*&gt; *&gt; *)getDirtyEvents</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains an array of AWSPinpointEvent objects.</Abstract></ReturnValue>
			<Anchor>//api/name/getDirtyEvents</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/getDirtyEventsWithLimit:</TokenIdentifier>
			<Abstract type="html">Retrieves dirty events in local storage with the specified limit.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;AWSPinpointEvent*&gt; *&gt; *)getDirtyEventsWithLimit:(NSNumber *)limit</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains an array of AWSPinpointEvent objects.</Abstract></ReturnValue>
			<Anchor>//api/name/getDirtyEventsWithLimit:</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/submitAllEvents</TokenIdentifier>
			<Abstract type="html">Submits all locally saved events to Amazon Pinpoint. Events that are successfully sent will be deleted from the device. Events that fail due to the device being offline will stop the submission process and be kept. Events that fail due to other reasons (such as the event being invalid) will be marked dirty and moved to a dirty table.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;AWSPinpointEvent*&gt; *&gt; *)submitAllEvents</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result contains an array of AWSPinpointEvent objects that were submitted.</Abstract></ReturnValue>
			<Anchor>//api/name/submitAllEvents</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/removeAllEvents</TokenIdentifier>
			<Abstract type="html">Removes all events saved to disk.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)removeAllEvents</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result is always nil.</Abstract></ReturnValue>
			<Anchor>//api/name/removeAllEvents</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSPinpointEventRecorder/removeAllDirtyEvents</TokenIdentifier>
			<Abstract type="html">Removes all dirty events saved to disk.</Abstract>
			<DeclaredIn>AWSPinpointEventRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)removeAllDirtyEvents</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result is always nil.</Abstract></ReturnValue>
			<Anchor>//api/name/removeAllDirtyEvents</Anchor>
            <NodeRef refid="1056"/>
		</Token>
		
        
        
	</File>
</Tokens>